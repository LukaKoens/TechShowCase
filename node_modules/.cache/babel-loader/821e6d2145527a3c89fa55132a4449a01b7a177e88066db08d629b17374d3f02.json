{"ast":null,"code":"var _jsxFileName = \"/home/luka/Documents/21t/21t_software/CV_website/TechShowCase/src/components/gaussian.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Component, useEffect } from \"react\";\nimport \"./gaussian.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cameras = [{\n  id: 0,\n  img_name: \"00001\",\n  width: 1959,\n  height: 1090,\n  position: [-3.0089893469241797, -0.11086489695181866, -3.7527640949141428],\n  rotation: [[0.876134201218856, 0.06925962026449776, 0.47706599800804744], [-0.04747421839895102, 0.9972110940209488, -0.057586739349882114], [-0.4797239414934443, 0.027805376500959853, 0.8769787916452908]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 1,\n  img_name: \"00009\",\n  width: 1959,\n  height: 1090,\n  position: [-2.5199776022057296, -0.09704735754873686, -3.6247725540304545],\n  rotation: [[0.9982731285632193, -0.011928707708098955, -0.05751927260507243], [0.0065061360949636325, 0.9955928229282383, -0.09355533724430458], [0.058381769258182864, 0.09301955098900708, 0.9939511719154457]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 2,\n  img_name: \"00017\",\n  width: 1959,\n  height: 1090,\n  position: [-0.7737533667465242, -0.3364271945329695, -2.9358969417573753],\n  rotation: [[0.9998813418672372, 0.013742375651625236, -0.0069605529394208224], [-0.014268370388586709, 0.996512943252834, -0.08220929105659476], [0.00580653013657589, 0.08229885200307129, 0.9965907801935302]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 3,\n  img_name: \"00025\",\n  width: 1959,\n  height: 1090,\n  position: [1.2198221749590001, -0.2196687861401182, -2.3183162007028453],\n  rotation: [[0.9208648867765482, 0.0012010625395201253, 0.389880004297208], [-0.06298204172269357, 0.987319521752825, 0.14571693239364383], [-0.3847611242348369, -0.1587410451475895, 0.9092635249821667]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 4,\n  img_name: \"00033\",\n  width: 1959,\n  height: 1090,\n  position: [1.742387858893817, -0.13848225198886954, -2.0566370113193146],\n  rotation: [[0.24669889292141334, -0.08370189346592856, -0.9654706879349405], [0.11343747891376445, 0.9919082664242816, -0.05700815184573074], [0.9624300466054861, -0.09545671285663988, 0.2541976029815521]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 5,\n  img_name: \"00041\",\n  width: 1959,\n  height: 1090,\n  position: [3.6567309419223935, -0.16470990600750707, -1.3458085590422042],\n  rotation: [[0.2341293058324528, -0.02968330457755884, -0.9717522161434825], [0.10270823606832301, 0.99469554638321, -0.005638106875665722], [0.9667649592295676, -0.09848690996657204, 0.2359360976431732]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 6,\n  img_name: \"00049\",\n  width: 1959,\n  height: 1090,\n  position: [3.9013554243203497, -0.2597500978038105, -0.8106154188297828],\n  rotation: [[0.6717235545638952, -0.015718162115524837, -0.7406351366386528], [0.055627354673906296, 0.9980224478387622, 0.029270992841185218], [0.7387104058127439, -0.060861588786650656, 0.6712695459756353]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 7,\n  img_name: \"00057\",\n  width: 1959,\n  height: 1090,\n  position: [4.742994605467533, -0.05591660945412069, 0.9500365976084458],\n  rotation: [[-0.17042655709210375, 0.01207080756938, -0.9852964448542146], [0.1165090336695526, 0.9931575292530063, -0.00798543433078162], [0.9784581921120181, -0.1161568667478904, -0.1706667764862097]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 8,\n  img_name: \"00065\",\n  width: 1959,\n  height: 1090,\n  position: [4.34676307626522, 0.08168160516967145, 1.0876221470355405],\n  rotation: [[-0.003575447631888379, -0.044792503246552894, -0.9989899137764799], [0.10770152645126597, 0.9931680875192705, -0.04491693593046672], [0.9941768441149182, -0.10775333677534978, 0.0012732004866391048]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}, {\n  id: 9,\n  img_name: \"00073\",\n  width: 1959,\n  height: 1090,\n  position: [3.264984351114202, 0.078974937336732, 1.0117200284114904],\n  rotation: [[-0.026919994628162257, -0.1565891128261527, -0.9872968974090509], [0.08444552208239385, 0.983768234577625, -0.1583319754069128], [0.9960643893290491, -0.0876350978794554, -0.013259786205163005]],\n  fy: 1164.6601287484507,\n  fx: 1159.5880733038064\n}];\nlet camera = cameras[0];\nfunction getProjectionMatrix(fx, fy, width, height) {\n  const znear = 0.2;\n  const zfar = 200;\n  return [[2 * fx / width, 0, 0, 0], [0, -(2 * fy) / height, 0, 0], [0, 0, zfar / (zfar - znear), 1], [0, 0, -(zfar * znear) / (zfar - znear), 0]].flat();\n}\nfunction getViewMatrix(camera) {\n  const R = camera.rotation.flat();\n  const t = camera.position;\n  const camToWorld = [[R[0], R[1], R[2], 0], [R[3], R[4], R[5], 0], [R[6], R[7], R[8], 0], [-t[0] * R[0] - t[1] * R[3] - t[2] * R[6], -t[0] * R[1] - t[1] * R[4] - t[2] * R[7], -t[0] * R[2] - t[1] * R[5] - t[2] * R[8], 1]].flat();\n  return camToWorld;\n}\n// function translate4(a, x, y, z) {\n//     return [\n//         ...a.slice(0, 12),\n//         a[0] * x + a[4] * y + a[8] * z + a[12],\n//         a[1] * x + a[5] * y + a[9] * z + a[13],\n//         a[2] * x + a[6] * y + a[10] * z + a[14],\n//         a[3] * x + a[7] * y + a[11] * z + a[15],\n//     ];\n// }\n\nfunction normalize(vec3) {\n  const length = Math.sqrt(vec3[0] * vec3[0] + vec3[1] * vec3[1] + vec3[2] * vec3[2]);\n  if (length === 0) {\n    return [0, 0, 0];\n  }\n  return [vec3[0] / length, vec3[1] / length, vec3[2] / length];\n}\nfunction cross(vec3a, vec3b) {\n  const x = vec3a[1] * vec3b[2] - vec3a[2] * vec3b[1];\n  const y = vec3a[2] * vec3b[0] - vec3a[0] * vec3b[2];\n  const z = vec3a[0] * vec3b[1] - vec3a[1] * vec3b[0];\n  return [x, y, z];\n}\nfunction multiply4(a, b) {\n  return [b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12], b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13], b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14], b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15], b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12], b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13], b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14], b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15], b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12], b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13], b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14], b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15], b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12], b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13], b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14], b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15]];\n}\nfunction invert4(a) {\n  let b00 = a[0] * a[5] - a[1] * a[4];\n  let b01 = a[0] * a[6] - a[2] * a[4];\n  let b02 = a[0] * a[7] - a[3] * a[4];\n  let b03 = a[1] * a[6] - a[2] * a[5];\n  let b04 = a[1] * a[7] - a[3] * a[5];\n  let b05 = a[2] * a[7] - a[3] * a[6];\n  let b06 = a[8] * a[13] - a[9] * a[12];\n  let b07 = a[8] * a[14] - a[10] * a[12];\n  let b08 = a[8] * a[15] - a[11] * a[12];\n  let b09 = a[9] * a[14] - a[10] * a[13];\n  let b10 = a[9] * a[15] - a[11] * a[13];\n  let b11 = a[10] * a[15] - a[11] * a[14];\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) return null;\n  return [(a[5] * b11 - a[6] * b10 + a[7] * b09) / det, (a[2] * b10 - a[1] * b11 - a[3] * b09) / det, (a[13] * b05 - a[14] * b04 + a[15] * b03) / det, (a[10] * b04 - a[9] * b05 - a[11] * b03) / det, (a[6] * b08 - a[4] * b11 - a[7] * b07) / det, (a[0] * b11 - a[2] * b08 + a[3] * b07) / det, (a[14] * b02 - a[12] * b05 - a[15] * b01) / det, (a[8] * b05 - a[10] * b02 + a[11] * b01) / det, (a[4] * b10 - a[5] * b08 + a[7] * b06) / det, (a[1] * b08 - a[0] * b10 - a[3] * b06) / det, (a[12] * b04 - a[13] * b02 + a[15] * b00) / det, (a[9] * b02 - a[8] * b04 - a[11] * b00) / det, (a[5] * b07 - a[4] * b09 - a[6] * b06) / det, (a[0] * b09 - a[1] * b07 + a[2] * b06) / det, (a[13] * b01 - a[12] * b03 - a[14] * b00) / det, (a[8] * b03 - a[9] * b01 + a[10] * b00) / det];\n}\nfunction rotate4(a, rad, x, y, z) {\n  let len = Math.hypot(x, y, z);\n  x /= len;\n  y /= len;\n  z /= len;\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let t = 1 - c;\n  let b00 = x * x * t + c;\n  let b01 = y * x * t + z * s;\n  let b02 = z * x * t - y * s;\n  let b10 = x * y * t - z * s;\n  let b11 = y * y * t + c;\n  let b12 = z * y * t + x * s;\n  let b20 = x * z * t + y * s;\n  let b21 = y * z * t - x * s;\n  let b22 = z * z * t + c;\n  return [a[0] * b00 + a[4] * b01 + a[8] * b02, a[1] * b00 + a[5] * b01 + a[9] * b02, a[2] * b00 + a[6] * b01 + a[10] * b02, a[3] * b00 + a[7] * b01 + a[11] * b02, a[0] * b10 + a[4] * b11 + a[8] * b12, a[1] * b10 + a[5] * b11 + a[9] * b12, a[2] * b10 + a[6] * b11 + a[10] * b12, a[3] * b10 + a[7] * b11 + a[11] * b12, a[0] * b20 + a[4] * b21 + a[8] * b22, a[1] * b20 + a[5] * b21 + a[9] * b22, a[2] * b20 + a[6] * b21 + a[10] * b22, a[3] * b20 + a[7] * b21 + a[11] * b22, ...a.slice(12, 16)];\n}\nfunction translate4(a, x, y, z) {\n  return [...a.slice(0, 12), a[0] * x + a[4] * y + a[8] * z + a[12], a[1] * x + a[5] * y + a[9] * z + a[13], a[2] * x + a[6] * y + a[10] * z + a[14], a[3] * x + a[7] * y + a[11] * z + a[15]];\n}\nfunction createWorker(self) {\n  let buffer;\n  let vertexCount = 0;\n  let viewProj;\n  // 6*4 + 4 + 4 = 8*4\n  // XYZ - Position (Float32)\n  // XYZ - Scale (Float32)\n  // RGBA - colors (uint8)\n  // IJKL - quaternion/rot (uint8)\n  const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n  let lastProj = [];\n  let depthIndex = new Uint32Array();\n  let lastVertexCount = 0;\n  var _floatView = new Float32Array(1);\n  var _int32View = new Int32Array(_floatView.buffer);\n  function floatToHalf(float) {\n    _floatView[0] = float;\n    var f = _int32View[0];\n    var sign = f >> 31 & 0x0001;\n    var exp = f >> 23 & 0x00ff;\n    var frac = f & 0x007fffff;\n    var newExp;\n    if (exp == 0) {\n      newExp = 0;\n    } else if (exp < 113) {\n      newExp = 0;\n      frac |= 0x00800000;\n      frac = frac >> 113 - exp;\n      if (frac & 0x01000000) {\n        newExp = 1;\n        frac = 0;\n      }\n    } else if (exp < 142) {\n      newExp = exp - 112;\n    } else {\n      newExp = 31;\n      frac = 0;\n    }\n    return sign << 15 | newExp << 10 | frac >> 13;\n  }\n  function packHalf2x16(x, y) {\n    return (floatToHalf(x) | floatToHalf(y) << 16) >>> 0;\n  }\n  function generateTexture() {\n    if (!buffer) return;\n    const f_buffer = new Float32Array(buffer);\n    const u_buffer = new Uint8Array(buffer);\n    var texwidth = 1024 * 2; // Set to your desired width\n    var texheight = Math.ceil(2 * vertexCount / texwidth); // Set to your desired height\n    var texdata = new Uint32Array(texwidth * texheight * 4); // 4 components per pixel (RGBA)\n    var texdata_c = new Uint8Array(texdata.buffer);\n    var texdata_f = new Float32Array(texdata.buffer);\n\n    // Here we convert from a .splat file buffer into a texture\n    // With a little bit more foresight perhaps this texture file\n    // should have been the native format as it'd be very easy to\n    // load it into webgl.\n    for (let i = 0; i < vertexCount; i++) {\n      // x, y, z\n      texdata_f[8 * i + 0] = f_buffer[8 * i + 0];\n      texdata_f[8 * i + 1] = f_buffer[8 * i + 1];\n      texdata_f[8 * i + 2] = f_buffer[8 * i + 2];\n\n      // r, g, b, a\n      texdata_c[4 * (8 * i + 7) + 0] = u_buffer[32 * i + 24 + 0];\n      texdata_c[4 * (8 * i + 7) + 1] = u_buffer[32 * i + 24 + 1];\n      texdata_c[4 * (8 * i + 7) + 2] = u_buffer[32 * i + 24 + 2];\n      texdata_c[4 * (8 * i + 7) + 3] = u_buffer[32 * i + 24 + 3];\n\n      // quaternions\n      let scale = [f_buffer[8 * i + 3 + 0], f_buffer[8 * i + 3 + 1], f_buffer[8 * i + 3 + 2]];\n      let rot = [(u_buffer[32 * i + 28 + 0] - 128) / 128, (u_buffer[32 * i + 28 + 1] - 128) / 128, (u_buffer[32 * i + 28 + 2] - 128) / 128, (u_buffer[32 * i + 28 + 3] - 128) / 128];\n\n      // Compute the matrix product of S and R (M = S * R)\n      const M = [1.0 - 2.0 * (rot[2] * rot[2] + rot[3] * rot[3]), 2.0 * (rot[1] * rot[2] + rot[0] * rot[3]), 2.0 * (rot[1] * rot[3] - rot[0] * rot[2]), 2.0 * (rot[1] * rot[2] - rot[0] * rot[3]), 1.0 - 2.0 * (rot[1] * rot[1] + rot[3] * rot[3]), 2.0 * (rot[2] * rot[3] + rot[0] * rot[1]), 2.0 * (rot[1] * rot[3] + rot[0] * rot[2]), 2.0 * (rot[2] * rot[3] - rot[0] * rot[1]), 1.0 - 2.0 * (rot[1] * rot[1] + rot[2] * rot[2])].map((k, i) => k * scale[Math.floor(i / 3)]);\n      const sigma = [M[0] * M[0] + M[3] * M[3] + M[6] * M[6], M[0] * M[1] + M[3] * M[4] + M[6] * M[7], M[0] * M[2] + M[3] * M[5] + M[6] * M[8], M[1] * M[1] + M[4] * M[4] + M[7] * M[7], M[1] * M[2] + M[4] * M[5] + M[7] * M[8], M[2] * M[2] + M[5] * M[5] + M[8] * M[8]];\n      texdata[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n      texdata[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n      texdata[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n    }\n    self.postMessage({\n      texdata,\n      texwidth,\n      texheight\n    }, [texdata.buffer]);\n  }\n  function runSort(viewProj) {\n    if (!buffer) return;\n    const f_buffer = new Float32Array(buffer);\n    if (lastVertexCount == vertexCount) {\n      let dot = lastProj[2] * viewProj[2] + lastProj[6] * viewProj[6] + lastProj[10] * viewProj[10];\n      if (Math.abs(dot - 1) < 0.01) {\n        return;\n      }\n    } else {\n      generateTexture();\n      lastVertexCount = vertexCount;\n    }\n\n    // console.time(\"sort\");\n    let maxDepth = -Infinity;\n    let minDepth = Infinity;\n    let sizeList = new Int32Array(vertexCount);\n    for (let i = 0; i < vertexCount; i++) {\n      let depth = (viewProj[2] * f_buffer[8 * i + 0] + viewProj[6] * f_buffer[8 * i + 1] + viewProj[10] * f_buffer[8 * i + 2]) * 4096 | 0;\n      sizeList[i] = depth;\n      if (depth > maxDepth) maxDepth = depth;\n      if (depth < minDepth) minDepth = depth;\n    }\n\n    // This is a 16 bit single-pass counting sort\n    let depthInv = 256 * 256 / (maxDepth - minDepth);\n    let counts0 = new Uint32Array(256 * 256);\n    for (let i = 0; i < vertexCount; i++) {\n      sizeList[i] = (sizeList[i] - minDepth) * depthInv | 0;\n      counts0[sizeList[i]]++;\n    }\n    let starts0 = new Uint32Array(256 * 256);\n    for (let i = 1; i < 256 * 256; i++) starts0[i] = starts0[i - 1] + counts0[i - 1];\n    depthIndex = new Uint32Array(vertexCount);\n    for (let i = 0; i < vertexCount; i++) depthIndex[starts0[sizeList[i]]++] = i;\n\n    // console.timeEnd(\"sort\");\n\n    lastProj = viewProj;\n    self.postMessage({\n      depthIndex,\n      viewProj,\n      vertexCount\n    }, [depthIndex.buffer]);\n  }\n  function processPlyBuffer(inputBuffer) {\n    const ubuf = new Uint8Array(inputBuffer);\n    // 10KB ought to be enough for a header...\n    const header = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n    const header_end = \"end_header\\n\";\n    const header_end_index = header.indexOf(header_end);\n    if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n    const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(header)[1]);\n    console.log(\"Vertex Count\", vertexCount);\n    let row_offset = 0,\n      offsets = {},\n      types = {};\n    const TYPE_MAP = {\n      double: \"getFloat64\",\n      int: \"getInt32\",\n      uint: \"getUint32\",\n      float: \"getFloat32\",\n      short: \"getInt16\",\n      ushort: \"getUint16\",\n      uchar: \"getUint8\"\n    };\n    for (let prop of header.slice(0, header_end_index).split(\"\\n\").filter(k => k.startsWith(\"property \"))) {\n      const [p, type, name] = prop.split(\" \");\n      const arrayType = TYPE_MAP[type] || \"getInt8\";\n      types[name] = arrayType;\n      offsets[name] = row_offset;\n      row_offset += parseInt(arrayType.replace(/[^\\d]/g, \"\")) / 8;\n    }\n    console.log(\"Bytes per row\", row_offset, types, offsets);\n    let dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n    let row = 0;\n    const attrs = new Proxy({}, {\n      get(target, prop) {\n        if (!types[prop]) throw new Error(prop + \" not found\");\n        return dataView[types[prop]](row * row_offset + offsets[prop], true);\n      }\n    });\n    console.time(\"calculate importance\");\n    let sizeList = new Float32Array(vertexCount);\n    let sizeIndex = new Uint32Array(vertexCount);\n    for (row = 0; row < vertexCount; row++) {\n      sizeIndex[row] = row;\n      if (!types[\"scale_0\"]) continue;\n      const size = Math.exp(attrs.scale_0) * Math.exp(attrs.scale_1) * Math.exp(attrs.scale_2);\n      const opacity = 1 / (1 + Math.exp(-attrs.opacity));\n      sizeList[row] = size * opacity;\n    }\n    console.timeEnd(\"calculate importance\");\n    console.time(\"sort\");\n    sizeIndex.sort((b, a) => sizeList[a] - sizeList[b]);\n    console.timeEnd(\"sort\");\n\n    // 6*4 + 4 + 4 = 8*4\n    // XYZ - Position (Float32)\n    // XYZ - Scale (Float32)\n    // RGBA - colors (uint8)\n    // IJKL - quaternion/rot (uint8)\n    const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n    const buffer = new ArrayBuffer(rowLength * vertexCount);\n    console.time(\"build buffer\");\n    for (let j = 0; j < vertexCount; j++) {\n      row = sizeIndex[j];\n      const position = new Float32Array(buffer, j * rowLength, 3);\n      const scales = new Float32Array(buffer, j * rowLength + 4 * 3, 3);\n      const rgba = new Uint8ClampedArray(buffer, j * rowLength + 4 * 3 + 4 * 3, 4);\n      const rot = new Uint8ClampedArray(buffer, j * rowLength + 4 * 3 + 4 * 3 + 4, 4);\n      if (types[\"scale_0\"]) {\n        const qlen = Math.sqrt(attrs.rot_0 ** 2 + attrs.rot_1 ** 2 + attrs.rot_2 ** 2 + attrs.rot_3 ** 2);\n        rot[0] = attrs.rot_0 / qlen * 128 + 128;\n        rot[1] = attrs.rot_1 / qlen * 128 + 128;\n        rot[2] = attrs.rot_2 / qlen * 128 + 128;\n        rot[3] = attrs.rot_3 / qlen * 128 + 128;\n        scales[0] = Math.exp(attrs.scale_0);\n        scales[1] = Math.exp(attrs.scale_1);\n        scales[2] = Math.exp(attrs.scale_2);\n      } else {\n        scales[0] = 0.01;\n        scales[1] = 0.01;\n        scales[2] = 0.01;\n        rot[0] = 255;\n        rot[1] = 0;\n        rot[2] = 0;\n        rot[3] = 0;\n      }\n      position[0] = attrs.x;\n      position[1] = attrs.y;\n      position[2] = attrs.z;\n      if (types[\"f_dc_0\"]) {\n        const SH_C0 = 0.28209479177387814;\n        rgba[0] = (0.5 + SH_C0 * attrs.f_dc_0) * 255;\n        rgba[1] = (0.5 + SH_C0 * attrs.f_dc_1) * 255;\n        rgba[2] = (0.5 + SH_C0 * attrs.f_dc_2) * 255;\n      } else {\n        rgba[0] = attrs.red;\n        rgba[1] = attrs.green;\n        rgba[2] = attrs.blue;\n      }\n      if (types[\"opacity\"]) {\n        rgba[3] = 1 / (1 + Math.exp(-attrs.opacity)) * 255;\n      } else {\n        rgba[3] = 255;\n      }\n    }\n    console.timeEnd(\"build buffer\");\n    return buffer;\n  }\n  const throttledSort = () => {\n    if (!sortRunning) {\n      sortRunning = true;\n      let lastView = viewProj;\n      runSort(lastView);\n      setTimeout(() => {\n        sortRunning = false;\n        if (lastView !== viewProj) {\n          throttledSort();\n        }\n      }, 0);\n    }\n  };\n  let sortRunning;\n  self.onmessage = e => {\n    if (e.data.ply) {\n      vertexCount = 0;\n      runSort(viewProj);\n      buffer = processPlyBuffer(e.data.ply);\n      vertexCount = Math.floor(buffer.byteLength / rowLength);\n      postMessage({\n        buffer: buffer\n      });\n    } else if (e.data.buffer) {\n      buffer = e.data.buffer;\n      vertexCount = e.data.vertexCount;\n    } else if (e.data.vertexCount) {\n      vertexCount = e.data.vertexCount;\n    } else if (e.data.view) {\n      viewProj = e.data.view;\n      throttledSort();\n    }\n  };\n}\nconst vertexShaderSource = `\n#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    vec4 cam = view * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -clip || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = clamp(pos2d.z/pos2d.w+1.0, 0.0, 1.0) * vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n}\n`.trim();\nconst fragmentShaderSource = `\n#version 300 es\nprecision highp float;\n\nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n\n`.trim();\nlet defaultViewMatrix = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.85, 0, 1];\nlet viewMatrix = defaultViewMatrix;\nasync function main(source, id) {\n  _s();\n  let carousel = true;\n  const params = new URLSearchParams(window.location.search);\n  try {\n    viewMatrix = JSON.parse(decodeURIComponent(window.location.hash.slice(1)));\n    carousel = false;\n  } catch (err) {}\n  const url = source;\n  const req = await fetch(url, {\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    credentials: \"omit\" // include, *same-origin, omit\n  });\n  console.log(req);\n  if (req.status != 200) throw new Error(req.status + \" Unable to load \" + req.url);\n  const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n  const reader = req.body.getReader();\n  let splatData = new Uint8Array(req.headers.get(\"content-length\"));\n  const downsample = splatData.length / rowLength > 500000 ? 1 : 1 / devicePixelRatio;\n  console.log(splatData.length / rowLength, downsample);\n  const worker = new Worker(URL.createObjectURL(new Blob([\"(\", createWorker.toString(), \")(self)\"], {\n    type: \"application/javascript\"\n  })));\n  const canvas = document.getElementById(\"canvas\" + id);\n  // const fps = document.getElementById(\"fps\");\n  // const camid = document.getElementById(\"camid\");\n\n  let projectionMatrix;\n  const gl = canvas.getContext(\"webgl2\", {\n    antialias: false\n  });\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexShaderSource);\n  gl.compileShader(vertexShader);\n  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) console.error(gl.getShaderInfoLog(vertexShader));\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentShaderSource);\n  gl.compileShader(fragmentShader);\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) console.error(gl.getShaderInfoLog(fragmentShader));\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  gl.useProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) console.error(gl.getProgramInfoLog(program));\n  gl.disable(gl.DEPTH_TEST); // Disable depth testing\n\n  // Enable blending\n  gl.enable(gl.BLEND);\n  gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n  gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n  const u_projection = gl.getUniformLocation(program, \"projection\");\n  const u_viewport = gl.getUniformLocation(program, \"viewport\");\n  const u_focal = gl.getUniformLocation(program, \"focal\");\n  const u_view = gl.getUniformLocation(program, \"view\");\n\n  // positions\n  const triangleVertices = new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]);\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, triangleVertices, gl.STATIC_DRAW);\n  const a_position = gl.getAttribLocation(program, \"position\");\n  gl.enableVertexAttribArray(a_position);\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.vertexAttribPointer(a_position, 2, gl.FLOAT, false, 0, 0);\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  var u_textureLocation = gl.getUniformLocation(program, \"u_texture\");\n  gl.uniform1i(u_textureLocation, 0);\n  const indexBuffer = gl.createBuffer();\n  const a_index = gl.getAttribLocation(program, \"index\");\n  gl.enableVertexAttribArray(a_index);\n  gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n  gl.vertexAttribIPointer(a_index, 1, gl.INT, false, 0, 0);\n  gl.vertexAttribDivisor(a_index, 1);\n  const resize = () => {\n    gl.uniform2fv(u_focal, new Float32Array([camera.fx, camera.fy]));\n    projectionMatrix = getProjectionMatrix(camera.fx, camera.fy, window.innerWidth, window.innerHeight);\n    gl.uniform2fv(u_viewport, new Float32Array([window.innerWidth, window.innerHeight]));\n    gl.canvas.width = Math.round(window.innerWidth / downsample);\n    gl.canvas.height = Math.round(window.innerHeight / downsample);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.uniformMatrix4fv(u_projection, false, projectionMatrix);\n  };\n  window.addEventListener(\"resize\", resize);\n  resize();\n  worker.onmessage = e => {\n    if (e.data.buffer) {\n      splatData = new Uint8Array(e.data.buffer);\n      const blob = new Blob([splatData.buffer], {\n        type: \"application/octet-stream\"\n      });\n      const link = document.createElement(\"a\");\n      link.download = \"model.splat\";\n      link.href = URL.createObjectURL(blob);\n      document.body.appendChild(link);\n      link.click();\n    } else if (e.data.texdata) {\n      const {\n        texdata,\n        texwidth,\n        texheight\n      } = e.data;\n      // console.log(texdata)\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32UI, texwidth, texheight, 0, gl.RGBA_INTEGER, gl.UNSIGNED_INT, texdata);\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n    } else if (e.data.depthIndex) {\n      const {\n        depthIndex,\n        viewProj\n      } = e.data;\n      gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.DYNAMIC_DRAW);\n      vertexCount = e.data.vertexCount;\n    }\n  };\n  let activeKeys = [];\n  let currentCameraIndex = 0;\n\n  // window.addEventListener(\"keydown\", (e) => {\n  //     // if (document.activeElement != document.body) return;\n  //     carousel = false;\n  //     if (!activeKeys.includes(e.code)) activeKeys.push(e.code);\n  //     if (/\\d/.test(e.key)) {\n  //         currentCameraIndex = parseInt(e.key)\n  //         camera = cameras[currentCameraIndex];\n  //         viewMatrix = getViewMatrix(camera);\n  //     }\n  // \tif (['-', '_'].includes(e.key)){\n  // \t\tcurrentCameraIndex = (currentCameraIndex + cameras.length - 1) % cameras.length;\n  // \t\tviewMatrix = getViewMatrix(cameras[currentCameraIndex]);\n  // \t}\n  // \tif (['+', '='].includes(e.key)){\n  // \t\tcurrentCameraIndex = (currentCameraIndex + 1) % cameras.length;\n  // \t\tviewMatrix = getViewMatrix(cameras[currentCameraIndex]);\n  // \t}\n  //     // camid.innerText = \"cam  \" + currentCameraIndex;\n  //     // if (e.code == \"KeyV\") {\n  //     //     location.hash =\n  //     //         \"#\" +\n  //     //         JSON.stringify(\n  //     //             viewMatrix.map((k) => Math.round(k * 100) / 100),\n  //     //         );\n  //     //         camid.innerText =\"\"\n  //     // } else if (e.code === \"KeyP\") {\n  //     //     carousel = true;\n  //     //     camid.innerText =\"\"\n  //     // }\n  // });\n  // window.addEventListener(\"keyup\", (e) => {\n  //     activeKeys = activeKeys.filter((k) => k !== e.code);\n  // });\n  // window.addEventListener(\"blur\", () => {\n  //     activeKeys = [];\n  // });\n\n  // window.addEventListener(\n  //     \"wheel\",\n  //     (e) => {\n  //         carousel = false;\n  //         e.preventDefault();\n  //         const lineHeight = 10;\n  //         const scale =\n  //             e.deltaMode == 1\n  //                 ? lineHeight\n  //                 : e.deltaMode == 2\n  //                 ? innerHeight\n  //                 : 1;\n  //         let inv = invert4(viewMatrix);\n  //         if (e.shiftKey) {\n  //             inv = translate4(\n  //                 inv,\n  //                 (e.deltaX * scale) / innerWidth,\n  //                 (e.deltaY * scale) / innerHeight,\n  //                 0,\n  //             );\n  //         } else if (e.ctrlKey || e.metaKey) {\n  //             // inv = rotate4(inv,  (e.deltaX * scale) / innerWidth,  0, 0, 1);\n  //             // inv = translate4(inv,  0, (e.deltaY * scale) / innerHeight, 0);\n  //             // let preY = inv[13];\n  //             inv = translate4(\n  //                 inv,\n  //                 0,\n  //                 0,\n  //                 (-10 * (e.deltaY * scale)) / innerHeight,\n  //             );\n  //             // inv[13] = preY;\n  //         } else {\n  //             let d = 4;\n  //             inv = translate4(inv, 0, 0, d);\n  //             inv = rotate4(inv, -(e.deltaX * scale) / innerWidth, 0, 1, 0);\n  //             inv = rotate4(inv, (e.deltaY * scale) / innerHeight, 1, 0, 0);\n  //             inv = translate4(inv, 0, 0, -d);\n  //         }\n\n  //         viewMatrix = invert4(inv);\n  //     },\n  //     { passive: false },\n  // );\n\n  let startX, startY, down;\n  // canvas.addEventListener(\"mousedown\", (e) => {\n  //     carousel = false;\n  //     e.preventDefault();\n  //     startX = e.clientX;\n  //     startY = e.clientY;\n  //     down = e.ctrlKey || e.metaKey ? 2 : 1;\n  // });\n  // canvas.addEventListener(\"contextmenu\", (e) => {\n  //     carousel = false;\n  //     e.preventDefault();\n  //     startX = e.clientX;\n  //     startY = e.clientY;\n  //     down = 2;\n  // });\n\n  // canvas.addEventListener(\"mousemove\", (e) => {\n  //     e.preventDefault();\n  //     if (down == 1) {\n  //         let inv = invert4(viewMatrix);\n  //         let dx = (5 * (e.clientX - startX)) / window.innerWidth;\n  //         let dy = (5 * (e.clientY - startY)) / window.innerHeight;\n  //         let d = 4;\n\n  //         inv = translate4(inv, 0, 0, d);\n  //         inv = rotate4(inv, dx, 0, 1, 0);\n  //         inv = rotate4(inv, -dy, 1, 0, 0);\n  //         inv = translate4(inv, 0, 0, -d);\n  //         // let postAngle = Math.atan2(inv[0], inv[10])\n  //         // inv = rotate4(inv, postAngle - preAngle, 0, 0, 1)\n  //         // console.log(postAngle)\n  //         viewMatrix = invert4(inv);\n\n  //         startX = e.clientX;\n  //         startY = e.clientY;\n  //     } else if (down == 2) {\n  //         let inv = invert4(viewMatrix);\n  //         // inv = rotateY(inv, );\n  //         // let preY = inv[13];\n  //         inv = translate4(\n  //             inv,\n  //             (-10 * (e.clientX - startX)) / window.innerWidth,\n  //             0,\n  //             (10 * (e.clientY - startY)) / window.innerHeight,\n  //         );\n  //         // inv[13] = preY;\n  //         viewMatrix = invert4(inv);\n\n  //         startX = e.clientX;\n  //         startY = e.clientY;\n  //     }\n  // });\n  // canvas.addEventListener(\"mouseup\", (e) => {\n  //     e.preventDefault();\n  //     down = false;\n  //     startX = 0;\n  //     startY = 0;\n  // });\n\n  // let altX = 0,\n  //     altY = 0;\n  // canvas.addEventListener(\n  //     \"touchstart\",\n  //     (e) => {\n  //         e.preventDefault();\n  //         if (e.touches.length === 1) {\n  //             carousel = false;\n  //             startX = e.touches[0].clientX;\n  //             startY = e.touches[0].clientY;\n  //             down = 1;\n  //         } else if (e.touches.length === 2) {\n  //             // console.log('beep')\n  //             carousel = false;\n  //             startX = e.touches[0].clientX;\n  //             altX = e.touches[1].clientX;\n  //             startY = e.touches[0].clientY;\n  //             altY = e.touches[1].clientY;\n  //             down = 1;\n  //         }\n  //     },\n  //     { passive: false },\n  // );\n  // canvas.addEventListener(\n  //     \"touchmove\",\n  //     (e) => {\n  //         e.preventDefault();\n  //         if (e.touches.length === 1 && down) {\n  //             let inv = invert4(viewMatrix);\n  //             let dx = (4 * (e.touches[0].clientX - startX)) / window.innerWidth;\n  //             let dy = (4 * (e.touches[0].clientY - startY)) / window.innerHeight;\n\n  //             let d = 4;\n  //             inv = translate4(inv, 0, 0, d);\n  //             // inv = translate4(inv,  -x, -y, -z);\n  //             // inv = translate4(inv,  x, y, z);\n  //             inv = rotate4(inv, dx, 0, 1, 0);\n  //             inv = rotate4(inv, -dy, 1, 0, 0);\n  //             inv = translate4(inv, 0, 0, -d);\n\n  //             viewMatrix = invert4(inv);\n\n  //             startX = e.touches[0].clientX;\n  //             startY = e.touches[0].clientY;\n  //         } else if (e.touches.length === 2) {\n  //             // alert('beep')\n  //             const dtheta =\n  //                 Math.atan2(startY - altY, startX - altX) -\n  //                 Math.atan2(\n  //                     e.touches[0].clientY - e.touches[1].clientY,\n  //                     e.touches[0].clientX - e.touches[1].clientX,\n  //                 );\n  //             const dscale =\n  //                 Math.hypot(startX - altX, startY - altY) /\n  //                 Math.hypot(\n  //                     e.touches[0].clientX - e.touches[1].clientX,\n  //                     e.touches[0].clientY - e.touches[1].clientY,\n  //                 );\n  //             const dx =\n  //                 (e.touches[0].clientX +\n  //                     e.touches[1].clientX -\n  //                     (startX + altX)) /\n  //                 2;\n  //             const dy =\n  //                 (e.touches[0].clientY +\n  //                     e.touches[1].clientY -\n  //                     (startY + altY)) /\n  //                 2;\n  //             let inv = invert4(viewMatrix);\n  //             // inv = translate4(inv,  0, 0, d);\n  //             inv = rotate4(inv, dtheta, 0, 0, 1);\n\n  //             inv = translate4(inv, -dx / window.innerWidth, -dy / window.innerHeight, 0);\n\n  //             // let preY = inv[13];\n  //             inv = translate4(inv, 0, 0, 3 * (1 - dscale));\n  //             // inv[13] = preY;\n\n  //             viewMatrix = invert4(inv);\n\n  //             startX = e.touches[0].clientX;\n  //             altX = e.touches[1].clientX;\n  //             startY = e.touches[0].clientY;\n  //             altY = e.touches[1].clientY;\n  //         }\n  //     },\n  //     { passive: false },\n  // );\n  // canvas.addEventListener(\n  //     \"touchend\",\n  //     (e) => {\n  //         e.preventDefault();\n  //         down = false;\n  //         startX = 0;\n  //         startY = 0;\n  //     },\n  //     { passive: false },\n  // );\n\n  let jumpDelta = 0;\n  let vertexCount = 0;\n  let lastFrame = 0;\n  // let avgFps = 0;\n  let start = 0;\n\n  // window.addEventListener(\"gamepadconnected\", (e) => {\n  //     const gp = navigator.getGamepads()[e.gamepad.index];\n  //     console.log(\n  //         `Gamepad connected at index ${gp.index}: ${gp.id}. It has ${gp.buttons.length} buttons and ${gp.axes.length} axes.`,\n  //     );\n  // });\n  // window.addEventListener(\"gamepaddisconnected\", (e) => {\n  //     console.log(\"Gamepad disconnected\");\n  // });\n\n  let leftGamepadTrigger, rightGamepadTrigger;\n  const frame = now => {\n    let inv = invert4(viewMatrix);\n    let shiftKey = activeKeys.includes(\"Shift\") || activeKeys.includes(\"ShiftLeft\") || activeKeys.includes(\"ShiftRight\");\n    if (activeKeys.includes(\"ArrowUp\")) {\n      if (shiftKey) {\n        inv = translate4(inv, 0, -0.03, 0);\n      } else {\n        inv = translate4(inv, 0, 0, 0.1);\n      }\n    }\n    if (activeKeys.includes(\"ArrowDown\")) {\n      if (shiftKey) {\n        inv = translate4(inv, 0, 0.03, 0);\n      } else {\n        inv = translate4(inv, 0, 0, -0.1);\n      }\n    }\n    if (activeKeys.includes(\"ArrowLeft\")) inv = translate4(inv, -0.03, 0, 0);\n    //\n    if (activeKeys.includes(\"ArrowRight\")) inv = translate4(inv, 0.03, 0, 0);\n    // inv = rotate4(inv, 0.01, 0, 1, 0);\n    if (activeKeys.includes(\"KeyA\")) inv = rotate4(inv, -0.01, 0, 1, 0);\n    if (activeKeys.includes(\"KeyD\")) inv = rotate4(inv, 0.01, 0, 1, 0);\n    if (activeKeys.includes(\"KeyQ\")) inv = rotate4(inv, 0.01, 0, 0, 1);\n    if (activeKeys.includes(\"KeyE\")) inv = rotate4(inv, -0.01, 0, 0, 1);\n    if (activeKeys.includes(\"KeyW\")) inv = rotate4(inv, 0.005, 1, 0, 0);\n    if (activeKeys.includes(\"KeyS\")) inv = rotate4(inv, -0.005, 1, 0, 0);\n    const gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n    let isJumping = activeKeys.includes(\"Space\");\n    for (let gamepad of gamepads) {\n      if (!gamepad) continue;\n      const axisThreshold = 0.1; // Threshold to detect when the axis is intentionally moved\n      const moveSpeed = 0.06;\n      const rotateSpeed = 0.02;\n\n      // Assuming the left stick controls translation (axes 0 and 1)\n      if (Math.abs(gamepad.axes[0]) > axisThreshold) {\n        inv = translate4(inv, moveSpeed * gamepad.axes[0], 0, 0);\n        carousel = false;\n      }\n      if (Math.abs(gamepad.axes[1]) > axisThreshold) {\n        inv = translate4(inv, 0, 0, -moveSpeed * gamepad.axes[1]);\n        carousel = false;\n      }\n      if (gamepad.buttons[12].pressed || gamepad.buttons[13].pressed) {\n        inv = translate4(inv, 0, -moveSpeed * (gamepad.buttons[12].pressed - gamepad.buttons[13].pressed), 0);\n        carousel = false;\n      }\n      if (gamepad.buttons[14].pressed || gamepad.buttons[15].pressed) {\n        inv = translate4(inv, -moveSpeed * (gamepad.buttons[14].pressed - gamepad.buttons[15].pressed), 0, 0);\n        carousel = false;\n      }\n\n      // Assuming the right stick controls rotation (axes 2 and 3)\n      if (Math.abs(gamepad.axes[2]) > axisThreshold) {\n        inv = rotate4(inv, rotateSpeed * gamepad.axes[2], 0, 1, 0);\n        carousel = false;\n      }\n      if (Math.abs(gamepad.axes[3]) > axisThreshold) {\n        inv = rotate4(inv, -rotateSpeed * gamepad.axes[3], 1, 0, 0);\n        carousel = false;\n      }\n      let tiltAxis = gamepad.buttons[6].value - gamepad.buttons[7].value;\n      if (Math.abs(tiltAxis) > axisThreshold) {\n        inv = rotate4(inv, rotateSpeed * tiltAxis, 0, 0, 1);\n        carousel = false;\n      }\n      if (gamepad.buttons[4].pressed && !leftGamepadTrigger) {\n        camera = cameras[(cameras.indexOf(camera) + 1) % cameras.length];\n        inv = invert4(getViewMatrix(camera));\n        carousel = false;\n      }\n      if (gamepad.buttons[5].pressed && !rightGamepadTrigger) {\n        camera = cameras[(cameras.indexOf(camera) + cameras.length - 1) % cameras.length];\n        inv = invert4(getViewMatrix(camera));\n        carousel = false;\n      }\n      leftGamepadTrigger = gamepad.buttons[4].pressed;\n      rightGamepadTrigger = gamepad.buttons[5].pressed;\n      if (gamepad.buttons[0].pressed) {\n        isJumping = true;\n        carousel = false;\n      }\n      if (gamepad.buttons[3].pressed) {\n        carousel = true;\n      }\n    }\n    if ([\"KeyJ\", \"KeyK\", \"KeyL\", \"KeyI\"].some(k => activeKeys.includes(k))) {\n      let d = 4;\n      inv = translate4(inv, 0, 0, d);\n      inv = rotate4(inv, activeKeys.includes(\"KeyJ\") ? -0.05 : activeKeys.includes(\"KeyL\") ? 0.05 : 0, 0, 1, 0);\n      inv = rotate4(inv, activeKeys.includes(\"KeyI\") ? 0.05 : activeKeys.includes(\"KeyK\") ? -0.05 : 0, 1, 0, 0);\n      inv = translate4(inv, 0, 0, -d);\n    }\n    viewMatrix = invert4(inv);\n    if (carousel) {\n      let inv = invert4(defaultViewMatrix);\n      const t = (Date.now() - start) / 5000;\n      const radius = 2.5;\n      const speed = 1;\n      const offset_x = 0;\n      const offset_z = 0;\n      // Calculate position based on orbit\n      const x = radius * Math.cos(speed * t) + offset_x;\n      const z = radius * Math.sin(speed * t) + offset_z;\n      console.log(x, z);\n      // Apply translation\n      inv = translate4(inv, x, 0, z);\n\n      // Apply rotation (optional)\n\n      const cameraDirection = normalize([-x, 0, -z]); // Reverse direction\n\n      // Calculate the up vector (assuming y-axis is up)\n      const upVector = [0, 1, 0];\n\n      // Calculate the right vector (cross product of direction and up)\n      const rightVector = cross(cameraDirection, upVector);\n\n      // Calculate the new up vector (cross product of right and direction)\n      const newUpVector = cross(rightVector, cameraDirection);\n\n      // Create a rotation matrix using the calculated vectors\n      const rotationMatrix = [[rightVector[0], rightVector[1], rightVector[2], 0], [newUpVector[0], newUpVector[1], newUpVector[2], 0], [cameraDirection[0], cameraDirection[1], cameraDirection[2], 0], [0, 0, 0, 1]];\n\n      // Apply rotation to the transformation matrix\n      inv = multiply4(inv, rotationMatrix.flat()); // You need a function to multiply matrices  \n      viewMatrix = invert4(inv);\n    }\n    let inv2 = invert4(viewMatrix);\n    inv2 = translate4(inv2, 0, -jumpDelta, 0);\n    inv2 = rotate4(inv2, -0.1 * jumpDelta, 1, 0, 0);\n    let actualViewMatrix = invert4(inv2);\n    const viewProj = multiply4(projectionMatrix, actualViewMatrix);\n    worker.postMessage({\n      view: viewProj\n    });\n\n    // const currentFps = 1000 / (now - lastFrame) || 0;\n    // avgFps = avgFps * 0.9 + currentFps * 0.1;\n\n    if (vertexCount > 0) {\n      document.getElementById(\"spinner\" + id).style.display = \"none\";\n      gl.uniformMatrix4fv(u_view, false, actualViewMatrix);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, vertexCount);\n    } else {\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      document.getElementById(\"spinner\" + id).style.display = \"\";\n      start = Date.now() + 2000;\n    }\n    const progress = 100 * vertexCount / (splatData.length / rowLength);\n    if (progress < 100) {\n      document.getElementById(\"progress\" + id).style.width = progress + \"%\";\n    } else {\n      document.getElementById(\"progress\" + id).style.display = \"none\";\n    }\n    // fps.innerText = Math.round(avgFps) + \" fps\";\n    // if (isNaN(currentCameraIndex)){\n    //     camid.innerText = \"\";\n    // }\n    lastFrame = now;\n    requestAnimationFrame(frame);\n  };\n  frame();\n  const selectFile = file => {\n    const fr = new FileReader();\n    if (/\\.json$/i.test(file.name)) {\n      fr.onload = () => {\n        cameras = JSON.parse(fr.result);\n        viewMatrix = getViewMatrix(cameras[0]);\n        projectionMatrix = getProjectionMatrix(camera.fx / downsample, camera.fy / downsample, canvas.width, canvas.height);\n        gl.uniformMatrix4fv(u_projection, false, projectionMatrix);\n        console.log(\"Loaded Cameras\");\n      };\n      fr.readAsText(file);\n    } else {\n      stopLoading = true;\n      fr.onload = () => {\n        splatData = new Uint8Array(fr.result);\n        console.log(\"Loaded\", Math.floor(splatData.length / rowLength));\n        if (splatData[0] == 112 && splatData[1] == 108 && splatData[2] == 121 && splatData[3] == 10) {\n          // ply file magic header means it should be handled differently\n          worker.postMessage({\n            ply: splatData.buffer\n          });\n        } else {\n          worker.postMessage({\n            buffer: splatData.buffer,\n            vertexCount: Math.floor(splatData.length / rowLength)\n          });\n        }\n      };\n      fr.readAsArrayBuffer(file);\n    }\n  };\n  window.addEventListener(\"hashchange\", e => {\n    try {\n      viewMatrix = JSON.parse(decodeURIComponent(window.location.hash.slice(1)));\n      carousel = false;\n    } catch (err) {}\n  });\n  const preventDefault = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  document.addEventListener(\"dragenter\", preventDefault);\n  document.addEventListener(\"dragover\", preventDefault);\n  document.addEventListener(\"dragleave\", preventDefault);\n  document.addEventListener(\"drop\", e => {\n    e.preventDefault();\n    e.stopPropagation();\n    selectFile(e.dataTransfer.files[0]);\n  });\n  let bytesRead = 0;\n  let lastVertexCount = -1;\n  let stopLoading = false;\n  while (true) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (done || stopLoading) break;\n    splatData.set(value, bytesRead);\n    bytesRead += value.length;\n    if (vertexCount > lastVertexCount) {\n      worker.postMessage({\n        buffer: splatData.buffer,\n        vertexCount: Math.floor(bytesRead / rowLength)\n      });\n      lastVertexCount = vertexCount;\n    }\n  }\n  if (!stopLoading) worker.postMessage({\n    buffer: splatData.buffer,\n    vertexCount: Math.floor(bytesRead / rowLength)\n  });\n}\n_s(main, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n  return [gl.useProgram];\n});\nmain().catch(err => {\n  // document.getElementById(\"message\").innerText = err.toString();\n});\nexport default function GaussianViewer({\n  id,\n  source\n}) {\n  _s2();\n  console.log(source);\n  useEffect(() => {\n    main(source, id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      id: \"progress\" + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      id: \"message\" + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1501,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene\",\n      id: \"spinner\" + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1502,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"canvas\",\n      id: \"canvas\" + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1503,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1499,\n    columnNumber: 9\n  }, this);\n}\n_s2(GaussianViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GaussianViewer;\n;\nvar _c;\n$RefreshReg$(_c, \"GaussianViewer\");","map":{"version":3,"names":["React","Component","useEffect","jsxDEV","_jsxDEV","cameras","id","img_name","width","height","position","rotation","fy","fx","camera","getProjectionMatrix","znear","zfar","flat","getViewMatrix","R","t","camToWorld","normalize","vec3","length","Math","sqrt","cross","vec3a","vec3b","x","y","z","multiply4","a","b","invert4","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","rotate4","rad","len","hypot","s","sin","c","cos","b12","b20","b21","b22","slice","translate4","createWorker","self","buffer","vertexCount","viewProj","rowLength","lastProj","depthIndex","Uint32Array","lastVertexCount","_floatView","Float32Array","_int32View","Int32Array","floatToHalf","float","f","sign","exp","frac","newExp","packHalf2x16","generateTexture","f_buffer","u_buffer","Uint8Array","texwidth","texheight","ceil","texdata","texdata_c","texdata_f","i","scale","rot","M","map","k","floor","sigma","postMessage","runSort","dot","abs","maxDepth","Infinity","minDepth","sizeList","depth","depthInv","counts0","starts0","processPlyBuffer","inputBuffer","ubuf","header","TextDecoder","decode","header_end","header_end_index","indexOf","Error","parseInt","exec","console","log","row_offset","offsets","types","TYPE_MAP","double","int","uint","short","ushort","uchar","prop","split","filter","startsWith","p","type","name","arrayType","replace","dataView","DataView","row","attrs","Proxy","get","target","time","sizeIndex","size","scale_0","scale_1","scale_2","opacity","timeEnd","sort","ArrayBuffer","j","scales","rgba","Uint8ClampedArray","qlen","rot_0","rot_1","rot_2","rot_3","SH_C0","f_dc_0","f_dc_1","f_dc_2","red","green","blue","throttledSort","sortRunning","lastView","setTimeout","onmessage","e","data","ply","byteLength","view","vertexShaderSource","trim","fragmentShaderSource","defaultViewMatrix","viewMatrix","main","source","_s","carousel","params","URLSearchParams","window","location","search","JSON","parse","decodeURIComponent","hash","err","url","req","fetch","mode","credentials","status","reader","body","getReader","splatData","headers","downsample","devicePixelRatio","worker","Worker","URL","createObjectURL","Blob","toString","canvas","document","getElementById","projectionMatrix","gl","getContext","antialias","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","u_projection","getUniformLocation","u_viewport","u_focal","u_view","triangleVertices","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","a_position","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","texture","createTexture","bindTexture","TEXTURE_2D","u_textureLocation","uniform1i","indexBuffer","a_index","vertexAttribIPointer","INT","vertexAttribDivisor","resize","uniform2fv","innerWidth","innerHeight","round","viewport","uniformMatrix4fv","addEventListener","blob","link","createElement","download","href","appendChild","click","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","activeTexture","TEXTURE0","DYNAMIC_DRAW","activeKeys","currentCameraIndex","startX","startY","down","jumpDelta","lastFrame","start","leftGamepadTrigger","rightGamepadTrigger","frame","now","inv","shiftKey","includes","gamepads","navigator","getGamepads","isJumping","gamepad","axisThreshold","moveSpeed","rotateSpeed","axes","buttons","pressed","tiltAxis","value","some","d","Date","radius","speed","offset_x","offset_z","cameraDirection","upVector","rightVector","newUpVector","rotationMatrix","inv2","actualViewMatrix","style","display","clear","COLOR_BUFFER_BIT","drawArraysInstanced","TRIANGLE_FAN","progress","requestAnimationFrame","selectFile","file","fr","FileReader","test","onload","result","readAsText","stopLoading","readAsArrayBuffer","preventDefault","stopPropagation","dataTransfer","files","bytesRead","done","read","set","catch","GaussianViewer","_s2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luka/Documents/21t/21t_software/CV_website/TechShowCase/src/components/gaussian.js"],"sourcesContent":["import React, {Component, useEffect} from \"react\";\nimport \"./gaussian.css\";\n\nlet cameras = [\n    {\n        id: 0,\n        img_name: \"00001\",\n        width: 1959,\n        height: 1090,\n        position: [\n            -3.0089893469241797, -0.11086489695181866, -3.7527640949141428,\n        ],\n        rotation: [\n            [0.876134201218856, 0.06925962026449776, 0.47706599800804744],\n            [-0.04747421839895102, 0.9972110940209488, -0.057586739349882114],\n            [-0.4797239414934443, 0.027805376500959853, 0.8769787916452908],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 1,\n        img_name: \"00009\",\n        width: 1959,\n        height: 1090,\n        position: [\n            -2.5199776022057296, -0.09704735754873686, -3.6247725540304545,\n        ],\n        rotation: [\n            [0.9982731285632193, -0.011928707708098955, -0.05751927260507243],\n            [0.0065061360949636325, 0.9955928229282383, -0.09355533724430458],\n            [0.058381769258182864, 0.09301955098900708, 0.9939511719154457],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 2,\n        img_name: \"00017\",\n        width: 1959,\n        height: 1090,\n        position: [\n            -0.7737533667465242, -0.3364271945329695, -2.9358969417573753,\n        ],\n        rotation: [\n            [0.9998813418672372, 0.013742375651625236, -0.0069605529394208224],\n            [-0.014268370388586709, 0.996512943252834, -0.08220929105659476],\n            [0.00580653013657589, 0.08229885200307129, 0.9965907801935302],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 3,\n        img_name: \"00025\",\n        width: 1959,\n        height: 1090,\n        position: [\n            1.2198221749590001, -0.2196687861401182, -2.3183162007028453,\n        ],\n        rotation: [\n            [0.9208648867765482, 0.0012010625395201253, 0.389880004297208],\n            [-0.06298204172269357, 0.987319521752825, 0.14571693239364383],\n            [-0.3847611242348369, -0.1587410451475895, 0.9092635249821667],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 4,\n        img_name: \"00033\",\n        width: 1959,\n        height: 1090,\n        position: [\n            1.742387858893817, -0.13848225198886954, -2.0566370113193146,\n        ],\n        rotation: [\n            [0.24669889292141334, -0.08370189346592856, -0.9654706879349405],\n            [0.11343747891376445, 0.9919082664242816, -0.05700815184573074],\n            [0.9624300466054861, -0.09545671285663988, 0.2541976029815521],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 5,\n        img_name: \"00041\",\n        width: 1959,\n        height: 1090,\n        position: [\n            3.6567309419223935, -0.16470990600750707, -1.3458085590422042,\n        ],\n        rotation: [\n            [0.2341293058324528, -0.02968330457755884, -0.9717522161434825],\n            [0.10270823606832301, 0.99469554638321, -0.005638106875665722],\n            [0.9667649592295676, -0.09848690996657204, 0.2359360976431732],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 6,\n        img_name: \"00049\",\n        width: 1959,\n        height: 1090,\n        position: [\n            3.9013554243203497, -0.2597500978038105, -0.8106154188297828,\n        ],\n        rotation: [\n            [0.6717235545638952, -0.015718162115524837, -0.7406351366386528],\n            [0.055627354673906296, 0.9980224478387622, 0.029270992841185218],\n            [0.7387104058127439, -0.060861588786650656, 0.6712695459756353],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 7,\n        img_name: \"00057\",\n        width: 1959,\n        height: 1090,\n        position: [4.742994605467533, -0.05591660945412069, 0.9500365976084458],\n        rotation: [\n            [-0.17042655709210375, 0.01207080756938, -0.9852964448542146],\n            [0.1165090336695526, 0.9931575292530063, -0.00798543433078162],\n            [0.9784581921120181, -0.1161568667478904, -0.1706667764862097],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 8,\n        img_name: \"00065\",\n        width: 1959,\n        height: 1090,\n        position: [4.34676307626522, 0.08168160516967145, 1.0876221470355405],\n        rotation: [\n            [-0.003575447631888379, -0.044792503246552894, -0.9989899137764799],\n            [0.10770152645126597, 0.9931680875192705, -0.04491693593046672],\n            [0.9941768441149182, -0.10775333677534978, 0.0012732004866391048],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n    {\n        id: 9,\n        img_name: \"00073\",\n        width: 1959,\n        height: 1090,\n        position: [3.264984351114202, 0.078974937336732, 1.0117200284114904],\n        rotation: [\n            [-0.026919994628162257, -0.1565891128261527, -0.9872968974090509],\n            [0.08444552208239385, 0.983768234577625, -0.1583319754069128],\n            [0.9960643893290491, -0.0876350978794554, -0.013259786205163005],\n        ],\n        fy: 1164.6601287484507,\n        fx: 1159.5880733038064,\n    },\n];\n\nlet camera = cameras[0];\n\nfunction getProjectionMatrix(fx, fy, width, height) {\n    const znear = 0.2;\n    const zfar = 200;\n    return [\n        [(2 * fx) / width, 0, 0, 0],\n        [0, -(2 * fy) / height, 0, 0],\n        [0, 0, zfar / (zfar - znear), 1],\n        [0, 0, -(zfar * znear) / (zfar - znear), 0],\n    ].flat();\n}\n\nfunction getViewMatrix(camera) {\n    const R = camera.rotation.flat();\n    const t = camera.position;\n    const camToWorld = [\n        [R[0], R[1], R[2], 0],\n        [R[3], R[4], R[5], 0],\n        [R[6], R[7], R[8], 0],\n        [\n            -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n            -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n            -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n            1,\n        ],\n    ].flat();\n    return camToWorld;\n}\n// function translate4(a, x, y, z) {\n//     return [\n//         ...a.slice(0, 12),\n//         a[0] * x + a[4] * y + a[8] * z + a[12],\n//         a[1] * x + a[5] * y + a[9] * z + a[13],\n//         a[2] * x + a[6] * y + a[10] * z + a[14],\n//         a[3] * x + a[7] * y + a[11] * z + a[15],\n//     ];\n// }\n\nfunction normalize(vec3) {\n    const length = Math.sqrt(vec3[0] * vec3[0] + vec3[1] * vec3[1] + vec3[2] * vec3[2]);\n    if (length === 0) {\n        return [0, 0, 0];\n    }\n    return [vec3[0] / length, vec3[1] / length, vec3[2] / length];\n}\n\nfunction cross(vec3a, vec3b) {\n    const x = vec3a[1] * vec3b[2] - vec3a[2] * vec3b[1];\n    const y = vec3a[2] * vec3b[0] - vec3a[0] * vec3b[2];\n    const z = vec3a[0] * vec3b[1] - vec3a[1] * vec3b[0];\n    return [x, y, z];\n}\n\nfunction multiply4(a, b) {\n    return [\n        b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n        b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n        b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n        b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n        b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n        b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n        b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n        b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n        b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n        b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n        b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n        b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n        b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n        b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n        b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n        b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n    ];\n}\n\nfunction invert4(a) {\n    let b00 = a[0] * a[5] - a[1] * a[4];\n    let b01 = a[0] * a[6] - a[2] * a[4];\n    let b02 = a[0] * a[7] - a[3] * a[4];\n    let b03 = a[1] * a[6] - a[2] * a[5];\n    let b04 = a[1] * a[7] - a[3] * a[5];\n    let b05 = a[2] * a[7] - a[3] * a[6];\n    let b06 = a[8] * a[13] - a[9] * a[12];\n    let b07 = a[8] * a[14] - a[10] * a[12];\n    let b08 = a[8] * a[15] - a[11] * a[12];\n    let b09 = a[9] * a[14] - a[10] * a[13];\n    let b10 = a[9] * a[15] - a[11] * a[13];\n    let b11 = a[10] * a[15] - a[11] * a[14];\n    let det =\n        b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) return null;\n    return [\n        (a[5] * b11 - a[6] * b10 + a[7] * b09) / det,\n        (a[2] * b10 - a[1] * b11 - a[3] * b09) / det,\n        (a[13] * b05 - a[14] * b04 + a[15] * b03) / det,\n        (a[10] * b04 - a[9] * b05 - a[11] * b03) / det,\n        (a[6] * b08 - a[4] * b11 - a[7] * b07) / det,\n        (a[0] * b11 - a[2] * b08 + a[3] * b07) / det,\n        (a[14] * b02 - a[12] * b05 - a[15] * b01) / det,\n        (a[8] * b05 - a[10] * b02 + a[11] * b01) / det,\n        (a[4] * b10 - a[5] * b08 + a[7] * b06) / det,\n        (a[1] * b08 - a[0] * b10 - a[3] * b06) / det,\n        (a[12] * b04 - a[13] * b02 + a[15] * b00) / det,\n        (a[9] * b02 - a[8] * b04 - a[11] * b00) / det,\n        (a[5] * b07 - a[4] * b09 - a[6] * b06) / det,\n        (a[0] * b09 - a[1] * b07 + a[2] * b06) / det,\n        (a[13] * b01 - a[12] * b03 - a[14] * b00) / det,\n        (a[8] * b03 - a[9] * b01 + a[10] * b00) / det,\n    ];\n}\n\nfunction rotate4(a, rad, x, y, z) {\n    let len = Math.hypot(x, y, z);\n    x /= len;\n    y /= len;\n    z /= len;\n    let s = Math.sin(rad);\n    let c = Math.cos(rad);\n    let t = 1 - c;\n    let b00 = x * x * t + c;\n    let b01 = y * x * t + z * s;\n    let b02 = z * x * t - y * s;\n    let b10 = x * y * t - z * s;\n    let b11 = y * y * t + c;\n    let b12 = z * y * t + x * s;\n    let b20 = x * z * t + y * s;\n    let b21 = y * z * t - x * s;\n    let b22 = z * z * t + c;\n    return [\n        a[0] * b00 + a[4] * b01 + a[8] * b02,\n        a[1] * b00 + a[5] * b01 + a[9] * b02,\n        a[2] * b00 + a[6] * b01 + a[10] * b02,\n        a[3] * b00 + a[7] * b01 + a[11] * b02,\n        a[0] * b10 + a[4] * b11 + a[8] * b12,\n        a[1] * b10 + a[5] * b11 + a[9] * b12,\n        a[2] * b10 + a[6] * b11 + a[10] * b12,\n        a[3] * b10 + a[7] * b11 + a[11] * b12,\n        a[0] * b20 + a[4] * b21 + a[8] * b22,\n        a[1] * b20 + a[5] * b21 + a[9] * b22,\n        a[2] * b20 + a[6] * b21 + a[10] * b22,\n        a[3] * b20 + a[7] * b21 + a[11] * b22,\n        ...a.slice(12, 16),\n    ];\n}\n\nfunction translate4(a, x, y, z) {\n    return [\n        ...a.slice(0, 12),\n        a[0] * x + a[4] * y + a[8] * z + a[12],\n        a[1] * x + a[5] * y + a[9] * z + a[13],\n        a[2] * x + a[6] * y + a[10] * z + a[14],\n        a[3] * x + a[7] * y + a[11] * z + a[15],\n    ];\n}\n\nfunction createWorker(self) {\n    let buffer;\n    let vertexCount = 0;\n    let viewProj;\n    // 6*4 + 4 + 4 = 8*4\n    // XYZ - Position (Float32)\n    // XYZ - Scale (Float32)\n    // RGBA - colors (uint8)\n    // IJKL - quaternion/rot (uint8)\n    const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n    let lastProj = [];\n    let depthIndex = new Uint32Array();\n    let lastVertexCount = 0;\n\n    var _floatView = new Float32Array(1);\n    var _int32View = new Int32Array(_floatView.buffer);\n\n    function floatToHalf(float) {\n        _floatView[0] = float;\n        var f = _int32View[0];\n\n        var sign = (f >> 31) & 0x0001;\n        var exp = (f >> 23) & 0x00ff;\n        var frac = f & 0x007fffff;\n\n        var newExp;\n        if (exp == 0) {\n            newExp = 0;\n        } else if (exp < 113) {\n            newExp = 0;\n            frac |= 0x00800000;\n            frac = frac >> (113 - exp);\n            if (frac & 0x01000000) {\n                newExp = 1;\n                frac = 0;\n            }\n        } else if (exp < 142) {\n            newExp = exp - 112;\n        } else {\n            newExp = 31;\n            frac = 0;\n        }\n\n        return (sign << 15) | (newExp << 10) | (frac >> 13);\n    }\n\n    function packHalf2x16(x, y) {\n        return (floatToHalf(x) | (floatToHalf(y) << 16)) >>> 0;\n    }\n\n    function generateTexture() {\n        if (!buffer) return;\n        const f_buffer = new Float32Array(buffer);\n        const u_buffer = new Uint8Array(buffer);\n\n        var texwidth = 1024 * 2; // Set to your desired width\n        var texheight = Math.ceil((2 * vertexCount) / texwidth); // Set to your desired height\n        var texdata = new Uint32Array(texwidth * texheight * 4); // 4 components per pixel (RGBA)\n        var texdata_c = new Uint8Array(texdata.buffer);\n        var texdata_f = new Float32Array(texdata.buffer);\n\n        // Here we convert from a .splat file buffer into a texture\n        // With a little bit more foresight perhaps this texture file\n        // should have been the native format as it'd be very easy to\n        // load it into webgl.\n        for (let i = 0; i < vertexCount; i++) {\n            // x, y, z\n            texdata_f[8 * i + 0] = f_buffer[8 * i + 0];\n            texdata_f[8 * i + 1] = f_buffer[8 * i + 1];\n            texdata_f[8 * i + 2] = f_buffer[8 * i + 2];\n\n            // r, g, b, a\n            texdata_c[4 * (8 * i + 7) + 0] = u_buffer[32 * i + 24 + 0];\n            texdata_c[4 * (8 * i + 7) + 1] = u_buffer[32 * i + 24 + 1];\n            texdata_c[4 * (8 * i + 7) + 2] = u_buffer[32 * i + 24 + 2];\n            texdata_c[4 * (8 * i + 7) + 3] = u_buffer[32 * i + 24 + 3];\n\n            // quaternions\n            let scale = [\n                f_buffer[8 * i + 3 + 0],\n                f_buffer[8 * i + 3 + 1],\n                f_buffer[8 * i + 3 + 2],\n            ];\n            let rot = [\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n            ];\n\n            // Compute the matrix product of S and R (M = S * R)\n            const M = [\n                1.0 - 2.0 * (rot[2] * rot[2] + rot[3] * rot[3]),\n                2.0 * (rot[1] * rot[2] + rot[0] * rot[3]),\n                2.0 * (rot[1] * rot[3] - rot[0] * rot[2]),\n\n                2.0 * (rot[1] * rot[2] - rot[0] * rot[3]),\n                1.0 - 2.0 * (rot[1] * rot[1] + rot[3] * rot[3]),\n                2.0 * (rot[2] * rot[3] + rot[0] * rot[1]),\n\n                2.0 * (rot[1] * rot[3] + rot[0] * rot[2]),\n                2.0 * (rot[2] * rot[3] - rot[0] * rot[1]),\n                1.0 - 2.0 * (rot[1] * rot[1] + rot[2] * rot[2]),\n            ].map((k, i) => k * scale[Math.floor(i / 3)]);\n\n            const sigma = [\n                M[0] * M[0] + M[3] * M[3] + M[6] * M[6],\n                M[0] * M[1] + M[3] * M[4] + M[6] * M[7],\n                M[0] * M[2] + M[3] * M[5] + M[6] * M[8],\n                M[1] * M[1] + M[4] * M[4] + M[7] * M[7],\n                M[1] * M[2] + M[4] * M[5] + M[7] * M[8],\n                M[2] * M[2] + M[5] * M[5] + M[8] * M[8],\n            ];\n\n            texdata[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n            texdata[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n            texdata[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n        }\n\n        self.postMessage({ texdata, texwidth, texheight }, [texdata.buffer]);\n    }\n\n    function runSort(viewProj) {\n        if (!buffer) return;\n        const f_buffer = new Float32Array(buffer);\n        if (lastVertexCount == vertexCount) {\n            let dot =\n                lastProj[2] * viewProj[2] +\n                lastProj[6] * viewProj[6] +\n                lastProj[10] * viewProj[10];\n            if (Math.abs(dot - 1) < 0.01) {\n                return;\n            }\n        } else {\n            generateTexture();\n            lastVertexCount = vertexCount;\n        }\n\n        // console.time(\"sort\");\n        let maxDepth = -Infinity;\n        let minDepth = Infinity;\n        let sizeList = new Int32Array(vertexCount);\n        for (let i = 0; i < vertexCount; i++) {\n            let depth =\n                ((viewProj[2] * f_buffer[8 * i + 0] +\n                    viewProj[6] * f_buffer[8 * i + 1] +\n                    viewProj[10] * f_buffer[8 * i + 2]) *\n                    4096) |\n                0;\n            sizeList[i] = depth;\n            if (depth > maxDepth) maxDepth = depth;\n            if (depth < minDepth) minDepth = depth;\n        }\n\n        // This is a 16 bit single-pass counting sort\n        let depthInv = (256 * 256) / (maxDepth - minDepth);\n        let counts0 = new Uint32Array(256 * 256);\n        for (let i = 0; i < vertexCount; i++) {\n            sizeList[i] = ((sizeList[i] - minDepth) * depthInv) | 0;\n            counts0[sizeList[i]]++;\n        }\n        let starts0 = new Uint32Array(256 * 256);\n        for (let i = 1; i < 256 * 256; i++)\n            starts0[i] = starts0[i - 1] + counts0[i - 1];\n        depthIndex = new Uint32Array(vertexCount);\n        for (let i = 0; i < vertexCount; i++)\n            depthIndex[starts0[sizeList[i]]++] = i;\n\n        // console.timeEnd(\"sort\");\n\n        lastProj = viewProj;\n        self.postMessage({ depthIndex, viewProj, vertexCount }, [\n            depthIndex.buffer,\n        ]);\n    }\n\n    function processPlyBuffer(inputBuffer) {\n        const ubuf = new Uint8Array(inputBuffer);\n        // 10KB ought to be enough for a header...\n        const header = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = header.indexOf(header_end);\n        if (header_end_index < 0)\n            throw new Error(\"Unable to read .ply file header\");\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(header)[1]);\n        console.log(\"Vertex Count\", vertexCount);\n        let row_offset = 0,\n            offsets = {},\n            types = {};\n        const TYPE_MAP = {\n            double: \"getFloat64\",\n            int: \"getInt32\",\n            uint: \"getUint32\",\n            float: \"getFloat32\",\n            short: \"getInt16\",\n            ushort: \"getUint16\",\n            uchar: \"getUint8\",\n        };\n        for (let prop of header\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            const [p, type, name] = prop.split(\" \");\n            const arrayType = TYPE_MAP[type] || \"getInt8\";\n            types[name] = arrayType;\n            offsets[name] = row_offset;\n            row_offset += parseInt(arrayType.replace(/[^\\d]/g, \"\")) / 8;\n        }\n        console.log(\"Bytes per row\", row_offset, types, offsets);\n\n        let dataView = new DataView(\n            inputBuffer,\n            header_end_index + header_end.length,\n        );\n        let row = 0;\n        const attrs = new Proxy(\n            {},\n            {\n                get(target, prop) {\n                    if (!types[prop]) throw new Error(prop + \" not found\");\n                    return dataView[types[prop]](\n                        row * row_offset + offsets[prop],\n                        true,\n                    );\n                },\n            },\n        );\n\n        console.time(\"calculate importance\");\n        let sizeList = new Float32Array(vertexCount);\n        let sizeIndex = new Uint32Array(vertexCount);\n        for (row = 0; row < vertexCount; row++) {\n            sizeIndex[row] = row;\n            if (!types[\"scale_0\"]) continue;\n            const size =\n                Math.exp(attrs.scale_0) *\n                Math.exp(attrs.scale_1) *\n                Math.exp(attrs.scale_2);\n            const opacity = 1 / (1 + Math.exp(-attrs.opacity));\n            sizeList[row] = size * opacity;\n        }\n        console.timeEnd(\"calculate importance\");\n\n        console.time(\"sort\");\n        sizeIndex.sort((b, a) => sizeList[a] - sizeList[b]);\n        console.timeEnd(\"sort\");\n\n        // 6*4 + 4 + 4 = 8*4\n        // XYZ - Position (Float32)\n        // XYZ - Scale (Float32)\n        // RGBA - colors (uint8)\n        // IJKL - quaternion/rot (uint8)\n        const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n        const buffer = new ArrayBuffer(rowLength * vertexCount);\n\n        console.time(\"build buffer\");\n        for (let j = 0; j < vertexCount; j++) {\n            row = sizeIndex[j];\n\n            const position = new Float32Array(buffer, j * rowLength, 3);\n            const scales = new Float32Array(buffer, j * rowLength + 4 * 3, 3);\n            const rgba = new Uint8ClampedArray(\n                buffer,\n                j * rowLength + 4 * 3 + 4 * 3,\n                4,\n            );\n            const rot = new Uint8ClampedArray(\n                buffer,\n                j * rowLength + 4 * 3 + 4 * 3 + 4,\n                4,\n            );\n\n            if (types[\"scale_0\"]) {\n                const qlen = Math.sqrt(\n                    attrs.rot_0 ** 2 +\n                        attrs.rot_1 ** 2 +\n                        attrs.rot_2 ** 2 +\n                        attrs.rot_3 ** 2,\n                );\n\n                rot[0] = (attrs.rot_0 / qlen) * 128 + 128;\n                rot[1] = (attrs.rot_1 / qlen) * 128 + 128;\n                rot[2] = (attrs.rot_2 / qlen) * 128 + 128;\n                rot[3] = (attrs.rot_3 / qlen) * 128 + 128;\n\n                scales[0] = Math.exp(attrs.scale_0);\n                scales[1] = Math.exp(attrs.scale_1);\n                scales[2] = Math.exp(attrs.scale_2);\n            } else {\n                scales[0] = 0.01;\n                scales[1] = 0.01;\n                scales[2] = 0.01;\n\n                rot[0] = 255;\n                rot[1] = 0;\n                rot[2] = 0;\n                rot[3] = 0;\n            }\n\n            position[0] = attrs.x;\n            position[1] = attrs.y;\n            position[2] = attrs.z;\n\n            if (types[\"f_dc_0\"]) {\n                const SH_C0 = 0.28209479177387814;\n                rgba[0] = (0.5 + SH_C0 * attrs.f_dc_0) * 255;\n                rgba[1] = (0.5 + SH_C0 * attrs.f_dc_1) * 255;\n                rgba[2] = (0.5 + SH_C0 * attrs.f_dc_2) * 255;\n            } else {\n                rgba[0] = attrs.red;\n                rgba[1] = attrs.green;\n                rgba[2] = attrs.blue;\n            }\n            if (types[\"opacity\"]) {\n                rgba[3] = (1 / (1 + Math.exp(-attrs.opacity))) * 255;\n            } else {\n                rgba[3] = 255;\n            }\n        }\n        console.timeEnd(\"build buffer\");\n        return buffer;\n    }\n\n    const throttledSort = () => {\n        if (!sortRunning) {\n            sortRunning = true;\n            let lastView = viewProj;\n            runSort(lastView);\n            setTimeout(() => {\n                sortRunning = false;\n                if (lastView !== viewProj) {\n                    throttledSort();\n                }\n            }, 0);\n        }\n    };\n\n    let sortRunning;\n    self.onmessage = (e) => {\n        if (e.data.ply) {\n            vertexCount = 0;\n            runSort(viewProj);\n            buffer = processPlyBuffer(e.data.ply);\n            vertexCount = Math.floor(buffer.byteLength / rowLength);\n            postMessage({ buffer: buffer });\n        } else if (e.data.buffer) {\n            buffer = e.data.buffer;\n            vertexCount = e.data.vertexCount;\n        } else if (e.data.vertexCount) {\n            vertexCount = e.data.vertexCount;\n        } else if (e.data.view) {\n            viewProj = e.data.view;\n            throttledSort();\n        }\n    };\n}\n\nconst vertexShaderSource = `\n#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    vec4 cam = view * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -clip || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = clamp(pos2d.z/pos2d.w+1.0, 0.0, 1.0) * vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis / viewport \n        + position.y * minorAxis / viewport, 0.0, 1.0);\n\n}\n`.trim();\n\nconst fragmentShaderSource = `\n#version 300 es\nprecision highp float;\n\nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n\n`.trim();\n\nlet defaultViewMatrix = [0,0,1,0,0,1,0,0,1,0,0,0,0,0.85,0,1];\n\nlet viewMatrix = defaultViewMatrix;\n\n\nasync function main(source, id) {\n    let carousel = true;\n    const params = new URLSearchParams(window.location.search);\n    try {\n        viewMatrix = JSON.parse(decodeURIComponent(window.location.hash.slice(1)));\n        carousel = false;\n    } catch (err) {}\n    const url = source;\n    const req = await fetch(url, {\n        mode: \"cors\", // no-cors, *cors, same-origin\n        credentials: \"omit\", // include, *same-origin, omit\n    });\n    console.log(req);\n    if (req.status != 200)\n        throw new Error(req.status + \" Unable to load \" + req.url);\n\n    const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n    const reader = req.body.getReader();\n    let splatData = new Uint8Array(req.headers.get(\"content-length\"));\n\n    const downsample =\n        splatData.length / rowLength > 500000 ? 1 : 1 / devicePixelRatio;\n    console.log(splatData.length / rowLength, downsample);\n\n    const worker = new Worker(\n        URL.createObjectURL(\n            new Blob([\"(\", createWorker.toString(), \")(self)\"], {\n                type: \"application/javascript\",\n            }),\n        ),\n    );\n\n    const canvas = document.getElementById(\"canvas\"+id);\n    // const fps = document.getElementById(\"fps\");\n    // const camid = document.getElementById(\"camid\");\n\n    let projectionMatrix;\n\n    const gl = canvas.getContext(\"webgl2\", {\n        antialias: false,\n    });\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))\n        console.error(gl.getShaderInfoLog(vertexShader));\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))\n        console.error(gl.getShaderInfoLog(fragmentShader));\n\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n        console.error(gl.getProgramInfoLog(program));\n\n    gl.disable(gl.DEPTH_TEST); // Disable depth testing\n\n    // Enable blending\n    gl.enable(gl.BLEND);\n    gl.blendFuncSeparate(\n        gl.ONE_MINUS_DST_ALPHA,\n        gl.ONE,\n        gl.ONE_MINUS_DST_ALPHA,\n        gl.ONE,\n    );\n    gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n    const u_projection = gl.getUniformLocation(program, \"projection\");\n    const u_viewport = gl.getUniformLocation(program, \"viewport\");\n    const u_focal = gl.getUniformLocation(program, \"focal\");\n    const u_view = gl.getUniformLocation(program, \"view\");\n\n    // positions\n    const triangleVertices = new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]);\n    const vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, triangleVertices, gl.STATIC_DRAW);\n    const a_position = gl.getAttribLocation(program, \"position\");\n    gl.enableVertexAttribArray(a_position);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(a_position, 2, gl.FLOAT, false, 0, 0);\n\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    var u_textureLocation = gl.getUniformLocation(program, \"u_texture\");\n    gl.uniform1i(u_textureLocation, 0);\n\n    const indexBuffer = gl.createBuffer();\n    const a_index = gl.getAttribLocation(program, \"index\");\n    gl.enableVertexAttribArray(a_index);\n    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n    gl.vertexAttribIPointer(a_index, 1, gl.INT, false, 0, 0);\n    gl.vertexAttribDivisor(a_index, 1);\n\n    const resize = () => {\n        gl.uniform2fv(u_focal, new Float32Array([camera.fx, camera.fy]));\n\n        projectionMatrix = getProjectionMatrix(\n            camera.fx,\n            camera.fy,\n            window.innerWidth,\n            window.innerHeight,\n        );\n\n        gl.uniform2fv(u_viewport, new Float32Array([window.innerWidth, window.innerHeight]));\n\n        gl.canvas.width = Math.round(window.innerWidth / downsample);\n        gl.canvas.height = Math.round(window.innerHeight / downsample);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n        gl.uniformMatrix4fv(u_projection, false, projectionMatrix);\n    };\n\n    window.addEventListener(\"resize\", resize);\n    resize();\n\n    worker.onmessage = (e) => {\n        if (e.data.buffer) {\n            splatData = new Uint8Array(e.data.buffer);\n            const blob = new Blob([splatData.buffer], {\n                type: \"application/octet-stream\",\n            });\n            const link = document.createElement(\"a\");\n            link.download = \"model.splat\";\n            link.href = URL.createObjectURL(blob);\n            document.body.appendChild(link);\n            link.click();\n        } else if (e.data.texdata) {\n            const { texdata, texwidth, texheight } = e.data;\n            // console.log(texdata)\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(\n                gl.TEXTURE_2D,\n                gl.TEXTURE_WRAP_S,\n                gl.CLAMP_TO_EDGE,\n            );\n            gl.texParameteri(\n                gl.TEXTURE_2D,\n                gl.TEXTURE_WRAP_T,\n                gl.CLAMP_TO_EDGE,\n            );\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                texwidth,\n                texheight,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                texdata,\n            );\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n        } else if (e.data.depthIndex) {\n            const { depthIndex, viewProj } = e.data;\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.DYNAMIC_DRAW);\n            vertexCount = e.data.vertexCount;\n        }\n    };\n\n    let activeKeys = [];\n\tlet currentCameraIndex = 0;\n\n    // window.addEventListener(\"keydown\", (e) => {\n    //     // if (document.activeElement != document.body) return;\n    //     carousel = false;\n    //     if (!activeKeys.includes(e.code)) activeKeys.push(e.code);\n    //     if (/\\d/.test(e.key)) {\n    //         currentCameraIndex = parseInt(e.key)\n    //         camera = cameras[currentCameraIndex];\n    //         viewMatrix = getViewMatrix(camera);\n    //     }\n\t// \tif (['-', '_'].includes(e.key)){\n\t// \t\tcurrentCameraIndex = (currentCameraIndex + cameras.length - 1) % cameras.length;\n\t// \t\tviewMatrix = getViewMatrix(cameras[currentCameraIndex]);\n\t// \t}\n\t// \tif (['+', '='].includes(e.key)){\n\t// \t\tcurrentCameraIndex = (currentCameraIndex + 1) % cameras.length;\n\t// \t\tviewMatrix = getViewMatrix(cameras[currentCameraIndex]);\n\t// \t}\n    //     // camid.innerText = \"cam  \" + currentCameraIndex;\n    //     // if (e.code == \"KeyV\") {\n    //     //     location.hash =\n    //     //         \"#\" +\n    //     //         JSON.stringify(\n    //     //             viewMatrix.map((k) => Math.round(k * 100) / 100),\n    //     //         );\n    //     //         camid.innerText =\"\"\n    //     // } else if (e.code === \"KeyP\") {\n    //     //     carousel = true;\n    //     //     camid.innerText =\"\"\n    //     // }\n    // });\n    // window.addEventListener(\"keyup\", (e) => {\n    //     activeKeys = activeKeys.filter((k) => k !== e.code);\n    // });\n    // window.addEventListener(\"blur\", () => {\n    //     activeKeys = [];\n    // });\n\n    // window.addEventListener(\n    //     \"wheel\",\n    //     (e) => {\n    //         carousel = false;\n    //         e.preventDefault();\n    //         const lineHeight = 10;\n    //         const scale =\n    //             e.deltaMode == 1\n    //                 ? lineHeight\n    //                 : e.deltaMode == 2\n    //                 ? innerHeight\n    //                 : 1;\n    //         let inv = invert4(viewMatrix);\n    //         if (e.shiftKey) {\n    //             inv = translate4(\n    //                 inv,\n    //                 (e.deltaX * scale) / innerWidth,\n    //                 (e.deltaY * scale) / innerHeight,\n    //                 0,\n    //             );\n    //         } else if (e.ctrlKey || e.metaKey) {\n    //             // inv = rotate4(inv,  (e.deltaX * scale) / innerWidth,  0, 0, 1);\n    //             // inv = translate4(inv,  0, (e.deltaY * scale) / innerHeight, 0);\n    //             // let preY = inv[13];\n    //             inv = translate4(\n    //                 inv,\n    //                 0,\n    //                 0,\n    //                 (-10 * (e.deltaY * scale)) / innerHeight,\n    //             );\n    //             // inv[13] = preY;\n    //         } else {\n    //             let d = 4;\n    //             inv = translate4(inv, 0, 0, d);\n    //             inv = rotate4(inv, -(e.deltaX * scale) / innerWidth, 0, 1, 0);\n    //             inv = rotate4(inv, (e.deltaY * scale) / innerHeight, 1, 0, 0);\n    //             inv = translate4(inv, 0, 0, -d);\n    //         }\n\n    //         viewMatrix = invert4(inv);\n    //     },\n    //     { passive: false },\n    // );\n\n    let startX, startY, down;\n    // canvas.addEventListener(\"mousedown\", (e) => {\n    //     carousel = false;\n    //     e.preventDefault();\n    //     startX = e.clientX;\n    //     startY = e.clientY;\n    //     down = e.ctrlKey || e.metaKey ? 2 : 1;\n    // });\n    // canvas.addEventListener(\"contextmenu\", (e) => {\n    //     carousel = false;\n    //     e.preventDefault();\n    //     startX = e.clientX;\n    //     startY = e.clientY;\n    //     down = 2;\n    // });\n\n    // canvas.addEventListener(\"mousemove\", (e) => {\n    //     e.preventDefault();\n    //     if (down == 1) {\n    //         let inv = invert4(viewMatrix);\n    //         let dx = (5 * (e.clientX - startX)) / window.innerWidth;\n    //         let dy = (5 * (e.clientY - startY)) / window.innerHeight;\n    //         let d = 4;\n\n    //         inv = translate4(inv, 0, 0, d);\n    //         inv = rotate4(inv, dx, 0, 1, 0);\n    //         inv = rotate4(inv, -dy, 1, 0, 0);\n    //         inv = translate4(inv, 0, 0, -d);\n    //         // let postAngle = Math.atan2(inv[0], inv[10])\n    //         // inv = rotate4(inv, postAngle - preAngle, 0, 0, 1)\n    //         // console.log(postAngle)\n    //         viewMatrix = invert4(inv);\n\n    //         startX = e.clientX;\n    //         startY = e.clientY;\n    //     } else if (down == 2) {\n    //         let inv = invert4(viewMatrix);\n    //         // inv = rotateY(inv, );\n    //         // let preY = inv[13];\n    //         inv = translate4(\n    //             inv,\n    //             (-10 * (e.clientX - startX)) / window.innerWidth,\n    //             0,\n    //             (10 * (e.clientY - startY)) / window.innerHeight,\n    //         );\n    //         // inv[13] = preY;\n    //         viewMatrix = invert4(inv);\n\n    //         startX = e.clientX;\n    //         startY = e.clientY;\n    //     }\n    // });\n    // canvas.addEventListener(\"mouseup\", (e) => {\n    //     e.preventDefault();\n    //     down = false;\n    //     startX = 0;\n    //     startY = 0;\n    // });\n\n    // let altX = 0,\n    //     altY = 0;\n    // canvas.addEventListener(\n    //     \"touchstart\",\n    //     (e) => {\n    //         e.preventDefault();\n    //         if (e.touches.length === 1) {\n    //             carousel = false;\n    //             startX = e.touches[0].clientX;\n    //             startY = e.touches[0].clientY;\n    //             down = 1;\n    //         } else if (e.touches.length === 2) {\n    //             // console.log('beep')\n    //             carousel = false;\n    //             startX = e.touches[0].clientX;\n    //             altX = e.touches[1].clientX;\n    //             startY = e.touches[0].clientY;\n    //             altY = e.touches[1].clientY;\n    //             down = 1;\n    //         }\n    //     },\n    //     { passive: false },\n    // );\n    // canvas.addEventListener(\n    //     \"touchmove\",\n    //     (e) => {\n    //         e.preventDefault();\n    //         if (e.touches.length === 1 && down) {\n    //             let inv = invert4(viewMatrix);\n    //             let dx = (4 * (e.touches[0].clientX - startX)) / window.innerWidth;\n    //             let dy = (4 * (e.touches[0].clientY - startY)) / window.innerHeight;\n\n    //             let d = 4;\n    //             inv = translate4(inv, 0, 0, d);\n    //             // inv = translate4(inv,  -x, -y, -z);\n    //             // inv = translate4(inv,  x, y, z);\n    //             inv = rotate4(inv, dx, 0, 1, 0);\n    //             inv = rotate4(inv, -dy, 1, 0, 0);\n    //             inv = translate4(inv, 0, 0, -d);\n\n    //             viewMatrix = invert4(inv);\n\n    //             startX = e.touches[0].clientX;\n    //             startY = e.touches[0].clientY;\n    //         } else if (e.touches.length === 2) {\n    //             // alert('beep')\n    //             const dtheta =\n    //                 Math.atan2(startY - altY, startX - altX) -\n    //                 Math.atan2(\n    //                     e.touches[0].clientY - e.touches[1].clientY,\n    //                     e.touches[0].clientX - e.touches[1].clientX,\n    //                 );\n    //             const dscale =\n    //                 Math.hypot(startX - altX, startY - altY) /\n    //                 Math.hypot(\n    //                     e.touches[0].clientX - e.touches[1].clientX,\n    //                     e.touches[0].clientY - e.touches[1].clientY,\n    //                 );\n    //             const dx =\n    //                 (e.touches[0].clientX +\n    //                     e.touches[1].clientX -\n    //                     (startX + altX)) /\n    //                 2;\n    //             const dy =\n    //                 (e.touches[0].clientY +\n    //                     e.touches[1].clientY -\n    //                     (startY + altY)) /\n    //                 2;\n    //             let inv = invert4(viewMatrix);\n    //             // inv = translate4(inv,  0, 0, d);\n    //             inv = rotate4(inv, dtheta, 0, 0, 1);\n\n    //             inv = translate4(inv, -dx / window.innerWidth, -dy / window.innerHeight, 0);\n\n    //             // let preY = inv[13];\n    //             inv = translate4(inv, 0, 0, 3 * (1 - dscale));\n    //             // inv[13] = preY;\n\n    //             viewMatrix = invert4(inv);\n\n    //             startX = e.touches[0].clientX;\n    //             altX = e.touches[1].clientX;\n    //             startY = e.touches[0].clientY;\n    //             altY = e.touches[1].clientY;\n    //         }\n    //     },\n    //     { passive: false },\n    // );\n    // canvas.addEventListener(\n    //     \"touchend\",\n    //     (e) => {\n    //         e.preventDefault();\n    //         down = false;\n    //         startX = 0;\n    //         startY = 0;\n    //     },\n    //     { passive: false },\n    // );\n\n    let jumpDelta = 0;\n    let vertexCount = 0;\n\n    let lastFrame = 0;\n    // let avgFps = 0;\n    let start = 0;\n\n    // window.addEventListener(\"gamepadconnected\", (e) => {\n    //     const gp = navigator.getGamepads()[e.gamepad.index];\n    //     console.log(\n    //         `Gamepad connected at index ${gp.index}: ${gp.id}. It has ${gp.buttons.length} buttons and ${gp.axes.length} axes.`,\n    //     );\n    // });\n    // window.addEventListener(\"gamepaddisconnected\", (e) => {\n    //     console.log(\"Gamepad disconnected\");\n    // });\n\n    let leftGamepadTrigger, rightGamepadTrigger;\n\n    const frame = (now) => {\n        let inv = invert4(viewMatrix);\n        let shiftKey = activeKeys.includes(\"Shift\") || activeKeys.includes(\"ShiftLeft\") || activeKeys.includes(\"ShiftRight\")\n\n        if (activeKeys.includes(\"ArrowUp\")) {\n            if (shiftKey) {\n                inv = translate4(inv, 0, -0.03, 0);\n            } else {\n                inv = translate4(inv, 0, 0, 0.1);\n            }\n        }\n        if (activeKeys.includes(\"ArrowDown\")) {\n            if (shiftKey) {\n                inv = translate4(inv, 0, 0.03, 0);\n            } else {\n                inv = translate4(inv, 0, 0, -0.1);\n            }\n        }\n        if (activeKeys.includes(\"ArrowLeft\"))\n            inv = translate4(inv, -0.03, 0, 0);\n        //\n        if (activeKeys.includes(\"ArrowRight\"))\n            inv = translate4(inv, 0.03, 0, 0);\n        // inv = rotate4(inv, 0.01, 0, 1, 0);\n        if (activeKeys.includes(\"KeyA\")) inv = rotate4(inv, -0.01, 0, 1, 0);\n        if (activeKeys.includes(\"KeyD\")) inv = rotate4(inv, 0.01, 0, 1, 0);\n        if (activeKeys.includes(\"KeyQ\")) inv = rotate4(inv, 0.01, 0, 0, 1);\n        if (activeKeys.includes(\"KeyE\")) inv = rotate4(inv, -0.01, 0, 0, 1);\n        if (activeKeys.includes(\"KeyW\")) inv = rotate4(inv, 0.005, 1, 0, 0);\n        if (activeKeys.includes(\"KeyS\")) inv = rotate4(inv, -0.005, 1, 0, 0);\n\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n        let isJumping = activeKeys.includes(\"Space\");\n        for (let gamepad of gamepads) {\n            if (!gamepad) continue;\n\n            const axisThreshold = 0.1; // Threshold to detect when the axis is intentionally moved\n            const moveSpeed = 0.06;\n            const rotateSpeed = 0.02;\n\n            // Assuming the left stick controls translation (axes 0 and 1)\n            if (Math.abs(gamepad.axes[0]) > axisThreshold) {\n                inv = translate4(inv, moveSpeed * gamepad.axes[0], 0, 0);\n                carousel = false;\n            }\n            if (Math.abs(gamepad.axes[1]) > axisThreshold) {\n                inv = translate4(inv, 0, 0, -moveSpeed * gamepad.axes[1]);\n                carousel = false;\n            }\n            if(gamepad.buttons[12].pressed || gamepad.buttons[13].pressed){\n                inv = translate4(inv, 0, -moveSpeed*(gamepad.buttons[12].pressed - gamepad.buttons[13].pressed), 0);\n                carousel = false;\n            }\n\n            if(gamepad.buttons[14].pressed || gamepad.buttons[15].pressed){\n                inv = translate4(inv, -moveSpeed*(gamepad.buttons[14].pressed - gamepad.buttons[15].pressed), 0, 0);\n                carousel = false;\n            }\n\n            // Assuming the right stick controls rotation (axes 2 and 3)\n            if (Math.abs(gamepad.axes[2]) > axisThreshold) {\n                inv = rotate4(inv, rotateSpeed * gamepad.axes[2], 0, 1, 0);\n                carousel = false;\n            }\n            if (Math.abs(gamepad.axes[3]) > axisThreshold) {\n                inv = rotate4(inv, -rotateSpeed * gamepad.axes[3], 1, 0, 0);\n                carousel = false;\n            }\n\n            let tiltAxis = gamepad.buttons[6].value - gamepad.buttons[7].value;\n            if (Math.abs(tiltAxis) > axisThreshold) {\n                inv = rotate4(inv, rotateSpeed * tiltAxis, 0, 0, 1);\n                carousel = false;\n            }\n            if (gamepad.buttons[4].pressed && !leftGamepadTrigger) {\n                camera = cameras[(cameras.indexOf(camera)+1)%cameras.length]\n                inv = invert4(getViewMatrix(camera));\n                carousel = false;\n            }\n            if (gamepad.buttons[5].pressed && !rightGamepadTrigger) {\n                camera = cameras[(cameras.indexOf(camera)+cameras.length-1)%cameras.length]\n                inv = invert4(getViewMatrix(camera));\n                carousel = false;\n            }\n            leftGamepadTrigger = gamepad.buttons[4].pressed;\n            rightGamepadTrigger = gamepad.buttons[5].pressed;\n            if (gamepad.buttons[0].pressed) {\n                isJumping = true;\n                carousel = false;\n            }\n            if(gamepad.buttons[3].pressed){\n                carousel = true;\n            }\n        }\n\n        if (\n            [\"KeyJ\", \"KeyK\", \"KeyL\", \"KeyI\"].some((k) => activeKeys.includes(k))\n        ) {\n            let d = 4;\n            inv = translate4(inv, 0, 0, d);\n            inv = rotate4(\n                inv,\n                activeKeys.includes(\"KeyJ\")\n                    ? -0.05\n                    : activeKeys.includes(\"KeyL\")\n                    ? 0.05\n                    : 0,\n                0,\n                1,\n                0,\n            );\n            inv = rotate4(\n                inv,\n                activeKeys.includes(\"KeyI\")\n                    ? 0.05\n                    : activeKeys.includes(\"KeyK\")\n                    ? -0.05\n                    : 0,\n                1,\n                0,\n                0,\n            );\n            inv = translate4(inv, 0, 0, -d);\n        }\n\n        viewMatrix = invert4(inv);\n\n        if (carousel) {\n            let inv = invert4(defaultViewMatrix);\n            const t = (Date.now() - start) / 5000;\n            const radius = 2.5;\n            const speed = 1;\n            \n            const offset_x = 0;\n            const offset_z = 0;\n            // Calculate position based on orbit\n            const x = radius * Math.cos(speed * t)+offset_x;\n            const z = radius * Math.sin(speed * t)+offset_z;\n            \n            console.log(x,z);\n            // Apply translation\n            inv = translate4(inv, x, 0, z);\n            \n            // Apply rotation (optional)\n\n            const cameraDirection = normalize([-x, 0, -z]); // Reverse direction\n\n            // Calculate the up vector (assuming y-axis is up)\n            const upVector = [0,1,0];\n            \n            // Calculate the right vector (cross product of direction and up)\n            const rightVector = cross(cameraDirection, upVector);\n            \n            // Calculate the new up vector (cross product of right and direction)\n            const newUpVector = cross(rightVector, cameraDirection);\n            \n            // Create a rotation matrix using the calculated vectors\n            const rotationMatrix = [\n                [rightVector[0], rightVector[1], rightVector[2], 0],\n                [newUpVector[0], newUpVector[1], newUpVector[2], 0],\n                [cameraDirection[0], cameraDirection[1], cameraDirection[2], 0],\n                [0, 0, 0, 1]\n            ];\n            \n            // Apply rotation to the transformation matrix\n            inv = multiply4(inv, rotationMatrix.flat()); // You need a function to multiply matrices  \n            viewMatrix = invert4(inv);\n        }\n\n        let inv2 = invert4(viewMatrix);\n        inv2 = translate4(inv2, 0, -jumpDelta, 0);\n        inv2 = rotate4(inv2, -0.1 * jumpDelta, 1, 0, 0);\n        let actualViewMatrix = invert4(inv2);\n\n        const viewProj = multiply4(projectionMatrix, actualViewMatrix);\n        worker.postMessage({ view: viewProj });\n\n        // const currentFps = 1000 / (now - lastFrame) || 0;\n        // avgFps = avgFps * 0.9 + currentFps * 0.1;\n\n        if (vertexCount > 0) {\n            document.getElementById(\"spinner\"+id).style.display = \"none\";\n            gl.uniformMatrix4fv(u_view, false, actualViewMatrix);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, vertexCount);\n        } else {\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            document.getElementById(\"spinner\"+id).style.display = \"\";\n            start = Date.now() + 2000;\n        }\n        const progress = (100 * vertexCount) / (splatData.length / rowLength);\n        if (progress < 100) {\n            document.getElementById(\"progress\"+id).style.width = progress + \"%\";\n        } else {\n            document.getElementById(\"progress\"+id).style.display = \"none\";\n        }\n        // fps.innerText = Math.round(avgFps) + \" fps\";\n        // if (isNaN(currentCameraIndex)){\n        //     camid.innerText = \"\";\n        // }\n        lastFrame = now;\n        requestAnimationFrame(frame);\n    };\n\n    frame();\n\n    const selectFile = (file) => {\n        const fr = new FileReader();\n        if (/\\.json$/i.test(file.name)) {\n            fr.onload = () => {\n                cameras = JSON.parse(fr.result);\n                viewMatrix = getViewMatrix(cameras[0]);\n                projectionMatrix = getProjectionMatrix(\n                    camera.fx / downsample,\n                    camera.fy / downsample,\n                    canvas.width,\n                    canvas.height,\n                );\n                gl.uniformMatrix4fv(u_projection, false, projectionMatrix);\n\n                console.log(\"Loaded Cameras\");\n            };\n            fr.readAsText(file);\n        } else {\n            stopLoading = true;\n            fr.onload = () => {\n                splatData = new Uint8Array(fr.result);\n                console.log(\"Loaded\", Math.floor(splatData.length / rowLength));\n\n                if (\n                    splatData[0] == 112 &&\n                    splatData[1] == 108 &&\n                    splatData[2] == 121 &&\n                    splatData[3] == 10\n                ) {\n                    // ply file magic header means it should be handled differently\n                    worker.postMessage({ ply: splatData.buffer });\n                } else {\n                    worker.postMessage({\n                        buffer: splatData.buffer,\n                        vertexCount: Math.floor(splatData.length / rowLength),\n                    });\n                }\n            };\n            fr.readAsArrayBuffer(file);\n        }\n    };\n\n    window.addEventListener(\"hashchange\", (e) => {\n        try {\n            viewMatrix = JSON.parse(decodeURIComponent(window.location.hash.slice(1)));\n            carousel = false;\n        } catch (err) {}\n    });\n\n    const preventDefault = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    document.addEventListener(\"dragenter\", preventDefault);\n    document.addEventListener(\"dragover\", preventDefault);\n    document.addEventListener(\"dragleave\", preventDefault);\n    document.addEventListener(\"drop\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        selectFile(e.dataTransfer.files[0]);\n    });\n\n    let bytesRead = 0;\n    let lastVertexCount = -1;\n    let stopLoading = false;\n\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done || stopLoading) break;\n\n        splatData.set(value, bytesRead);\n        bytesRead += value.length;\n\n        if (vertexCount > lastVertexCount) {\n            worker.postMessage({\n                buffer: splatData.buffer,\n                vertexCount: Math.floor(bytesRead / rowLength),\n            });\n            lastVertexCount = vertexCount;\n        }\n    }\n    if (!stopLoading)\n        worker.postMessage({\n            buffer: splatData.buffer,\n            vertexCount: Math.floor(bytesRead / rowLength),\n        });\n}\n\nmain().catch((err) => {\n    // document.getElementById(\"message\").innerText = err.toString();\n});\n\n\n\nexport default function GaussianViewer({id, source}){\n    console.log(source)\n\n    useEffect(() => {\n        main(source,id);\n    });\n    return (\n        <div>\n            <div className=\"progress\" id={\"progress\"+id}></div>\n            <div className=\"message\" id={\"message\"+id}></div>\n            <div className=\"scene\" id={\"spinner\"+id}></div>\n            <canvas className=\"canvas\" id={\"canvas\"+id}></canvas>\n        </div>\n    );\n};"],"mappings":"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AAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACvDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACtDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACtDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACvDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACvDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACxDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACxDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACzDC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EACzDC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EAC1DC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,EAAE,CAAC,EAC1DC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAG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AAY,EACfnF,EAAE,CAACoF,YAAY,EACfjO,OACJ,CAAC;MACD6I,EAAE,CAACqF,aAAa,CAACrF,EAAE,CAACsF,QAAQ,CAAC;MAC7BtF,EAAE,CAACkD,WAAW,CAAClD,EAAE,CAACmD,UAAU,EAAEH,OAAO,CAAC;IAC1C,CAAC,MAAM,IAAI/F,CAAC,CAACC,IAAI,CAACrH,UAAU,EAAE;MAC1B,MAAM;QAAEA,UAAU;QAAEH;MAAS,CAAC,GAAGuH,CAAC,CAACC,IAAI;MACvC8C,EAAE,CAACuC,UAAU,CAACvC,EAAE,CAACwC,YAAY,EAAEc,WAAW,CAAC;MAC3CtD,EAAE,CAACyC,UAAU,CAACzC,EAAE,CAACwC,YAAY,EAAE3M,UAAU,EAAEmK,EAAE,CAACuF,YAAY,CAAC;MAC3D9P,WAAW,GAAGwH,CAAC,CAACC,IAAI,CAACzH,WAAW;IACpC;EACJ,CAAC;EAED,IAAI+P,UAAU,GAAG,EAAE;EACtB,IAAIC,kBAAkB,GAAG,CAAC;;EAEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,IAAIC,MAAM,EAAEC,MAAM,EAAEC,IAAI;EACxjB,IAAIpQ,WAAW,GAAG,CAAC;EAEnB,IAAIqQ,SAAS,GAAG,CAAC;EACjB;EACA,IAAIC,KAAK,GAAG,CAAC;;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,kBAAkB,EAAEC,mBAAmB;EAE3C,MAAMC,KAAK,GAAIC,GAAG,IAAK;IACnB,IAAIC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}